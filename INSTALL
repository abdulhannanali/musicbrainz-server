Install instructions for the MusicBrainz Server: 
------------------------------------------------

Requirements:
=============

The MusicBrainz server requires the following items:

1) An SQL server. The code has been tested with MySQL. The scripts use the
   perl DBI interface to talk to the server. It should work with other
   servers as well, but that has not been tested.
2) A database and user dedicated to musicbrainz. These scripts use
   the database name 'musicbrainz' and user name 'musicbrainz'.
3) Apache with mod_perl and Mason installed. See the following sites for more
   details on each of these packages:
   
      Apache:   http://www.apache.org 
      mod_perl: http://perl.apache.org for details.
      Mason:    http://www.masonhq.com

   NOTE: When configuring Apache, make sure to not include the built in
         expat, since that will conflice with the SiRPAC RDF parser's user
         of the external expat module. configure apache with:

         mod_perl: perl Makefile.PL APACHE_SRC=../apache_1.3.19/src DO_HTTPD=1 USE_APACI=1 PREP_HTTPD=1 EVERYTHING=1
         apache: ./configure --enable-module=rewrite --disable-rule=expat --prefix=/usr/apache --activate-module=src/modules/perl/libperl.a



4) Perl 5.003 or higher and the required perl modules: 
  
   CPAN Name
   ---------
   Bundle::Apache (Apache::Registry and Apache::Session)
   DBI          
   DBD::mysql  
   HTML::Mason
   Unicode::String
   XML::DOM   
   XML::Parser 
   XML::XQL  
   XML::XQL::DOM
   RDFStore
   Digest::SHA1
   UUID (requires e2fsprogs)

   These probably come standard with Perl:
   IO::Socket     
   Carp;

Installation:
=============

1) Make sure you have all the prerequisite pieces of software installed.
   Installing perl modules using CPAN is easier than doing it by hand.
   To use CPAN, as root type 'perl -MCPAN -e shell'. 

   For the HTML::Mason install, there is a handler.pl script already
   included in the admin directory. You will probably need to review
   it and make sure that all the paths point to the right place. Check
   the file for TODO sections which point out things that might need to
   change. However, if you place all musicbrainz related things into
   /home/httpd/musicbrainz/{htdocs|cgi-bin|mason|locks|sessions} you
   shouldn't have to make any changes.

   TODO sections mentioned:
     1) Set the lib path to point to the cgi-bin dir in this dist.
     2) Set the Mason comp_root (point it to the htdocs dir in this dist)
     3) Set the Mason data_dir (point it to an empty Mason dir where httpd
        has write access. To keep things in one place, choose 
        /home/httpd/musicbrainz/mason. httpd will place cache objects and 
        such in this dir)
     4) Set the session and lock directories where Apache can store the
        user session files. It defauls to /home/httpd/musicbrainz/sessions
        and /home/httpd/musicbrainz/locks. Make sure the selected
        directories exist before you start the server.

2) Create a database called 'musicbrainz'. 
   (mysql: 'mysqladmin create musicbrainz')

3) Add a user to the database called musicbrainz. The user needs to have
   insert, select, and update priveledges. An easy way to do this is
   to use the MySQLAddUser.pl script in the admin directory.
   (cd admin ; MySQLAddUser.pl musicbrainz localhost)

4) In the cgi-bin directory, edit DBDefs.pm. This perl module will keep
   all the information for accesing the database. Follow the instructions
   in the module.

5) In the admin directory, run the script CreateTables.pl. This will log
   into the DB server and create all the necessary tables. Give it the
   -t and the -i option to create the tables and indices needed to run
   MusicBrainz.

6) Configure apache to use mason. In the admin directory you will find
   a prefab handler.pl to use with the mason setup and the vh_httpd.conf
   file which is a VirtualHost fragment for Apache's httpd.conf file.
   I suggest to run MusicBrainz as a virtual host, and if you stash
   the htdocs files into /home/httpd/musicbrains/htdocs and the files
   from cgi-bin into /home/httpd/musicbrainz/cgi-bin you shouldn't have
   to modify handler.pl and you should only have to import vh_httpd.conf
   into your virtualhosts section of your httpd.conf file. In the admin
   directory you'll also find startup.pl which is the mod_perl startup
   file. Place both startup.pl and handler.pl into the conf directory
   of your apache install. Its probably wise to review each of these scripts
   and look for TODO comments. Each of the TODO comments indicates a
   path or setting that needs to be set for your configuration. 

7) Copy the all the files/subdirs in the htdocs directory into DocumentRoot
   directory that you specified in httpd.conf. Then copy all the files/subdirs
   from the cgi-bin dir into the ScriptAlias directory specified in httpd.conf

8) Now start mysql (if its not already running), and then start apache and
   you should be set and ready to roll. Go the the selected URL and you
   should see a MusicBrainz site without any data.

9) Finally, import some data into the system. Download the data dump from
       ftp://ftp.musicbrainz.org/pub/musicbrainz/mbdump.tar.bz2
   and then run the data import script in the admin dir:

       ./MBImport.pl mbdump.tar.bz2

   This should import the data and now you have your very own MusicBrainz
   server.

Good luck!

Robert Kaye
Mayhem & Chaos Coordinator
rob@eorbit.net

#!/home/httpd/musicbrainz/mb_server/cgi-bin/perl -w
# vi: set ts=4 sw=4 :

use lib "cgi-bin";
use MusicBrainz;
use DBDefs;
use UserStuff;
use Sql;

# sub DBDefs::DEBUG_MAIL_SPOOL { "/tmp/pubsubs" }

my $mb = new MusicBrainz;
$mb->Login;
my $sql = new Sql($mb->{DBH});

my $accs = $sql->SelectListOfHashes("SELECT * FROM moderator where email!='' AND emailconfirmdate IS NOT NULL
	AND id IN (SELECT moderator FROM moderator_subscribe_artist)
	ORDER BY name");
# my $accs = $sql->SelectListOfHashes("SELECT * FROM moderator where name='djce'");

my $users = UserStuff->new($mb->{DBH});

for my $acc (@$accs)
{
	my $email = $acc->{email};
	my $user = $users->_new_from_row($acc);
	my $error = $user->SendPublicSubsNotice;
	warn "Failed: ".$acc->{name}." ($error)\n" if $error;
	print "Sent to $acc->{name} ($email)\n";
}

sub UserStuff::SendPublicSubsNotice
{
	my $self = shift;

	my $name = $self->GetName;

	my $body = <<EOF;
Important news about your MusicBrainz account

Dear $name,

Today the MusicBrainz server software has been updated, and this update
includes an important change relating to your account.

Previously, all "artist subscription" data on MusicBrainz has been private:
no-one could see to which artists you had subscribed, and no-one could see
which users were subscribed to any given artist.  However one of the changes
in this release of the MusicBrainz server is to make such data public.

If you are happy to allow other users to see your list of subscribed
artists, then you don't need to do anything.

On the other hand if you don't want to allow other users to see your list of
subscriptions, then you must log in and change your preferences (the new
preference called "Allow other users to see my subscribed artists")
BEFORE 15TH MARCH.

For more information, please read the release notes:
http://musicbrainz.org/news/20050205-1.html

After reading the notes, if you still have questions, please see
http://${\ DBDefs::WEB_SERVER() }/support/contact.html
for contact details.

-- The MusicBrainz Team
EOF

	require MusicBrainz::Server::Mail;
	my $mail = MusicBrainz::Server::Mail->new(
		# Sender: not required
		From		=> 'MusicBrainz <webserver@musicbrainz.org>',
		# To: $self (automatic)
		"Reply-To"	=> 'MusicBrainz Support <support@musicbrainz.org>',
		Subject		=> "Important news about your MusicBrainz account",
		Type		=> "text/plain",
		Encoding	=> "quoted-printable",
		Data		=> $body,
	);
    $mail->attr("content-type.charset" => "utf-8");

	$self->SendFormattedEmail(entity => $mail);
}

# eof

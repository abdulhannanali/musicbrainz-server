#!/usr/bin/perl -w
# vi: set ts=4 sw=4 :
#____________________________________________________________________________
#
#   MusicBrainz -- the open internet music database
#
#   Copyright (C) 1998 Robert Kaye
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#   $Id$
#____________________________________________________________________________

use FindBin;
use lib "$FindBin::Bin/../cgi-bin";

use DBDefs;
use MusicBrainz;
use Apache::Session::File ();
use Getopt::Long;
use File::Basename qw( dirname basename );

my $sessdir = &DBDefs::SESSION_DIR;
my $lockdir = &DBDefs::LOCK_DIR;

my $dump_all = 0;
my $expire = 1;
my $show_expired_sessions = -t;
my $show_alive_sessions = 0;

GetOptions(
	"dump-all!"				=> \$dump_all,
	"expire!"				=> \$expire,
	"show-expired-sessions!"=> \$show_expired_sessions,
	"show-alive-sessions!"	=> \$show_alive_sessions,
) or usage();

sub usage
{
	print <<EOF;
Usage: RemoveOldSessions [OPTIONS] [FILE]...

Allowable options are:

    --[no]dump-all  [don't] dump the contents of every session
                    (default is false)
    --[no]expire    [don't] delete expired sessions (default is true)
    --[no]show-expired-sessions
                    [don't] describe sessions which are being expired
                    (default is true at a terminal, false otherwise)
    --[no]show-alive-sessions
                    [don't] describe sessions which are still alive
                    (default is false)

If FILE is specified, then process only those files; otherwise, process all
files in the session directory ($sessdir).

EOF
	exit 1;
}

if (@ARGV)
{
	my ($ddev, $dinode) = (stat $sessdir)[0,1];

	for my $file (@ARGV)
	{
		my $dir = dirname($file);
		my ($fdev, $finode) = (stat $dir)[0,1];

		warn "File $file doesn't seem to be in the session directory ($sessdir)\n"
			unless $ddev == $fdev
			and $dinode == $finode;
		
		process_file($file);
	}
}
else
{
	opendir(DIR, $sessdir) or die $!;

	while (my $file = readdir DIR)
	{
		-f "$sessdir/$file" or next;

		process_file("$sessdir/$file");
	}

	closedir DIR;
}

exit;

sub process_file
{
	my $file = shift;
	my $sess = basename($file);

	my %session;
	my $has_expired = 0;

	eval { 
	    tie %session,
		'Apache::Session::File',
		$sess,
		{
		    Directory => $sessdir,
		    LockDirectory => $lockdir,
		};
	} or warn("tie $file: $@"), next;

	use Data::Dumper;
	print Data::Dumper->Dump([
		\%session,
		#tied(%session),
	],[
		"*session-$sess",
		#"tied-$sess",
	]) if $dump_all;

	my $expiretime = $session{'expire'};

	if ($expiretime and time() >= $expiretime)
	{
		print "Session $sess has expired\n"
			if $show_expired_sessions;
		$has_expired = 1;
	} else {
		print "Session $sess has not expired\n"
			if $show_alive_sessions;
	}

	if ($has_expired and $expire)
	{
		tied(%session)->delete;
	}

	untie %session;
}

# eof RemoveOldSessions

#!/home/httpd/musicbrainz/mb_server/cgi-bin/perl -w
# vi: set ts=4 sw=4 :
#____________________________________________________________________________
#
#   MusicBrainz -- the open internet music database
#
#   Copyright (C) 1998 Robert Kaye
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#   $Id$
#____________________________________________________________________________

use FindBin;
use lib "$FindBin::Bin/../../cgi-bin";

use strict;
use warnings;

package DuplicateTrackNumbers;
use base qw( MusicBrainz::Server::ReportScript );

use Album;

sub GatherData
{
	my $self = shift;

	my $sql = $self->SqlObj;
	$sql->Begin;

	$sql->Do(<<'EOF');
		SELECT
			DISTINCT album
		INTO TEMPORARY TABLE
			t_badalbums
		FROM
			(SELECT
				album,
				sequence,
				COUNT(*)
			FROM
				albumjoin
			GROUP BY
				album, sequence
			HAVING COUNT(*) > 1
		) AS t
EOF

	# I'm not sure if this is necessary, but it can't really hurt
	$sql->Do("ALTER TABLE t_badalbums ALTER COLUMN album SET NOT NULL");
	$sql->Do("ALTER TABLE t_badalbums ADD PRIMARY KEY (album)");

	$sql->Commit;

	$self->GatherDataFromQuery(<<'EOF',
		SELECT
			ar.id AS artist_id,
			ar.name AS artist_name,
			ar.sortname AS artist_sortname,
			ar.resolution AS artist_resolution,
			al.id AS album_id,
			al.name AS album_name
		FROM
			artist ar, album al, t_badalbums t
		WHERE
			al.id = t.album
			AND	ar.id = al.artist
			AND	al.attributes[2] != ?
		ORDER BY
			ar.sortname, al.name
EOF
		[ &Album::ALBUM_ATTR_NONALBUMTRACKS ],
	);
}

__PACKAGE__->new->RunReport;

# eof DuplicateTrackNumbers

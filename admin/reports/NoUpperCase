#!/usr/bin/perl -w
# vi: set ts=4 sw=4 :
#____________________________________________________________________________
#
#   MusicBrainz -- the open internet music database
#
#   Copyright (C) 1998 Robert Kaye
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#   $Id$
#____________________________________________________________________________

use FindBin;
use lib "$FindBin::Bin/../../cgi-bin";

use strict;
use warnings;

package NoUpperCase;
use base qw( MusicBrainz::Server::ReportScript );

sub GatherData
{
	my $self = shift;

	$self->GatherDataFromQuery(<<'EOF', [], \&filter);
			SELECT tr.id AS track_id, tr.name AS track_name,
					aj.sequence AS seq, aj.album AS album_id,
					ar.id AS artist_id, ar.name AS artist_name
			FROM track tr, albumjoin aj, artist ar
			WHERE aj.track = tr.id AND tr.artist = ar.id 
					AND tr.name !~ '[[:upper:]]' AND tr.name ~ '[[:lower:]]'
			ORDER BY ar.sortname, aj.album, tr.name
EOF
}

sub filter
{
	my $row = shift;

	my $seq = $row->{seq};

	$row->{track_name} =~ s/[\s(-]*$seq[\s)-]*//;

	return undef if $row->{track_name} =~ m/^
							[[<(]?
							(?:
								blank|data|data\ track|empty
								|silence|untitled|unknown
							)
							[]>)]?
							$/xi;

	delete $row->{seq};

	$row;
}

__PACKAGE__->new->RunReport;

# eof NoUpperCase

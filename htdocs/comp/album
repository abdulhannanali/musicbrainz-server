<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# This component displays a release.
	#
	# $Id$
	#
</%perl>
<%args>

	$mb => undef
	$album
	$artist
	$highlighttracks => +{}
	$highlightonly => 0

	$link => 1
	$showlinks => 1 # TODO: link|showlinks make consistent.
	$showmodlinks => 1
	$showcollapsed => 0

	$ex => ""
	$mbtagger => $session{'mbt'}
	$showids => 0
	$showtag => 0
	$showreleases => 0
	$tagchecked => 0
	$tracks => undef
	$showtrackartists => 0
	$releaseevents => undef

</%args>
<%perl>

	$mb = $m->comp("/comp/dblogin") if (not defined $mb);

	# always load multiple artist tracks
	my @info = ($tracks ? @$tracks : $album->LoadTracks());

	if ($showcollapsed)
	{
		my ($id, $url);

		$url = "/show/artist/?artistid=" . $artist->GetId();
		$id = $album->GetId();
		$ex =~ s/(^|\D)$id(\D|$)/$1$2/g;
		$ex =~ s/,,/,/g;
		$ex =~ s/(,$)|(^,)//g;
		$url .= "&ex=$ex" if ($ex ne '');
		$url .= "&compact=0";
		$m->comp("/comp/release/release_begin",
				artist => $artist,
				album => $album,
				showlinks => $showlinks,
				showmodlinks => $showmodlinks,
				linktype => "collapse",
				link => $url,
				showtag => $showtag,
				tagchecked => $tagchecked);
	}
	else
	{
		$m->comp("/comp/release/release_begin",
				artist => $artist,
				album => $album,
				showlinks => $showlinks,
				showmodlinks => $showmodlinks,
				showtag => $showtag,
				tagchecked => $tagchecked,
				showtrackartists => $showtrackartists);
	}

	my $trmcounts = $album->LoadTRMCount();
	my $puidcounts = $album->LoadPUIDCount();

	for(my $i = 0;; $i++)
	{
		my $track = $info[$i];
		last if (!defined $track);

		my $tcount = $trmcounts->{$track->GetId()};
		$tcount = 0 if (not defined $tcount);

		my $pcount = $puidcounts->{$track->GetId()};
		$pcount = 0 if (not defined $pcount);

		if (!$highlightonly || $highlighttracks->{$track->GetId})
		{
			$m->comp("/comp/release/release_track",
				mb => $mb,
				artist => $artist,
				album => $album,
				track => $track,
				tindex => $i,
				highlight => $highlighttracks->{$track->GetId},
				showmodlinks => $showmodlinks,
				trmcount => $tcount,
				puidcount => $pcount,
				mbtagger => $mbtagger,
				showtrackartists => $showtrackartists,
				highlightonly => $highlightonly);
		}
	}

	$m->comp("/comp/release/release_summary",
		artist => $artist, album => $album,
		showmodlinks => $showmodlinks,
		showtrackartists => $showtrackartists);

	$m->comp("/comp/release/release_end",
		artist => $artist, album => $album, showmodlinks => $showmodlinks,
		showids => $showids, showreleases => $showreleases,
		showtrackartists => $showtrackartists, link => $link, releaseevents => $releaseevents);

</%perl>

%# vi: set ts=4 sw=4 ft=mason :

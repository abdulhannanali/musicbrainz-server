<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# This component displays a release.
	#
	# $Id$
	#
</%perl>
<%args>

	$mb => undef
	$album
	$artist
	$highlighttracks => +{}
	$highlightonly => 0

	$link => 1
	$showlinks => 1 # TODO: link|showlinks make consistent.
	$showmodlinks => 1
	$showcollapsed => 0
	$ex => ""

	$showids => 0
	$showtag => 0
	$showreleases => 0
	$tagchecked => 0
	$tracks => undef
	$releaseevents => undef

	$mbt => $session{"mbt"}

	# show track artists toggle is stored in the session, but
	# allows to override setting with passed in values.
	# (ie pages which do not want the track artists to be shown)
	$showtrackartists => $session{"showtrackartists"}

	# show track relationships toggle is stored in the session, but
	# allows to override setting with passed in values.
	# (ie pages which do not want the track artists to be shown)
	$showrelationships => $session{"showrelationships"}

	# the toggle function is only available on the "show release"
	# page, because the parameters need to be handled and written
	# to the session. any other page which wants to handle the
	# arguments will need to provide the same funcationlity than
	# the "show release" page.
	$showrelationshipstoggle => 0
	$showtrackartiststoggle => 0

    $folksonomy => 0
	$showratings => 0
    
    $addtocollection => undef
    
    $short => undef

</%args>
<%perl>
	$showtrackartists = 0 if (not defined $showtrackartists);
	$showrelationships = 1 if (not defined $showrelationships);

	$mb = $m->comp("/comp/dblogin") if (not defined $mb);

	# always load multiple artist tracks
	my @info = ($tracks ? @$tracks : $album->LoadTracks(1));

	if ($showcollapsed)
	{
		my ($id, $url);

		$url = "/show/artist/?artistid=" . $artist->GetId();
		$id = $album->GetId();
		$ex =~ s/(^|\D)$id(\D|$)/$1$2/g;
		$ex =~ s/,,/,/g;
		$ex =~ s/(,$)|(^,)//g;
		$url .= "&ex=$ex" if ($ex ne '');
		$url .= "&compact=0";
		$m->comp("/comp/release/release_begin",
				artist => $artist,
				album => $album,
				showlinks => $showlinks,
				showeditlinks => $showmodlinks,
				linktype => "collapse",
				link => $url,
				showtag => $showtag,
				tagchecked => $tagchecked,
                folksonomy => $folksonomy,
				showratings => $showratings,
                addtocollection => $addtocollection,
                ex => $ex,
                short => $short
			);
	}
	else
	{
		$m->comp("/comp/release/release_begin",
				artist => $artist,
				album => $album,
				showlinks => $showlinks,
				showeditlinks => $showmodlinks,
				showtag => $showtag,
				tagchecked => $tagchecked,
				showtrackartists => $showtrackartists,
				showrelationships => $showrelationships,
				showtrackartiststoggle => $showtrackartiststoggle,
				showrelationshipstoggle => $showrelationshipstoggle,
                folksonomy => $folksonomy,
				showratings => $showratings,
                addtocollection => $addtocollection,
                ex => $ex,
                short => $short
			);
	}

	my $puidcounts = $album->LoadPUIDCount();
	my $trackannos = $album->LoadLatestTrackAnnos();

	for(my $i = 0;; $i++)
	{
		my $track = $info[$i];
		last if (!defined $track);

		my $pcount = $puidcounts->{$track->GetId()};
		$pcount = 0 if (not defined $pcount);
		
		my $hasannotation = $trackannos->{$track->GetId()} ? 1 : 0;

		if (!$highlightonly || $highlighttracks->{$track->GetId})
		{
			$m->comp("/comp/release/release_track",
				mb => $mb,
				artist => $artist,
				album => $album,
				track => $track,
				tindex => $i,
				highlight => $highlighttracks->{$track->GetId},
				showeditlinks => $showmodlinks,
				puidcount => $pcount,
				hasannotation => $hasannotation,
				mbt => $mbt,
				showtrackartists => $showtrackartists,
				showrelationships => $showrelationships,
				highlightonly => $highlightonly,
				showratings => $showratings,
			);
		}
	}

	$m->comp("/comp/release/release_summary",
		artist => $artist,
		album => $album,
		showeditlinks => $showmodlinks,
		showtrackartists => $showtrackartists
	);

	$m->comp("/comp/release/release_end",
		artist => $artist,
		album => $album,
		showeditlinks => $showmodlinks,
		showdiscids => $showids,
		showreleaseevents => $showreleases,
		releaseevents => $releaseevents,
		showtrackartists => $showtrackartists
	);

</%perl>

%# vi: set ts=4 sw=4 ft=mason :

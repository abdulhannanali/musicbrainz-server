<%doc>Edit an annotation.</%doc>

<%args>
	$id
	$annotationid => undef
	$annotationtext => undef
	$changelog => ""
	$submitvalue => ""
	$notetext => ""
</%args>

<%init>
	my $self = $m->request_comp;
	my $entitytype = $self->attr('entitytype');
	my $entitytype2 = $entitytype eq "album" ? "release" : $entitytype;
	my $annotationtype = $self->attr('annotationtype');
</%init>

<%perl>

# only logged in users may see this page
	$m->comp("/comp/checkloggedin", 1, 1)
		or return;

	MusicBrainz::Server::Validation::IsNonNegInteger($id) && $id
		or return $m->comp("/comp/layout/badarguments", text => "Argument id is invalid");

	MusicBrainz::Server::Validation::IsSingleLineString($changelog)
		or return $m->comp("/comp/layout/badarguments", text => "Argument changelog is invalid");

# Instantiate MusicBrainz object, and load the release object
	my $mb = $m->comp("/comp/dblogin");
	my $entity = $m->comp("/comp/load$entitytype2", $mb, $id);

# Set an advisory lock to indicate that this page is currently being edited.
# The lock times out after the given period of time and is only used to
# inform the user. It cannot be relied on.
# Memcached provides semaphores but we need the timeout mechanism of set()
# here.
	my $sid = $session{_session_id};

	my $locked = MusicBrainz::Server::Annotation->LockedBy(
		$annotationtype, $id, $sid);

	MusicBrainz::Server::Annotation->GetLock(
		$annotationtype, $id, $sid);

	my $defaulttext = $annotationtext;
	my $not_most_recent = 0;
	my $origtext;

	if (MusicBrainz::Server::Validation::IsNonNegInteger($annotationid))
{
		my $old = MusicBrainz::Server::Annotation->new($mb->{DBH});
		$old->SetId($annotationid);
		$old->LoadFromId()
			or return $m->comp("/comp/badargs", 1, 1);
		$defaulttext = $old->GetText()
			unless defined $defaulttext;
		$origtext = $old->GetText();

# Is this the most recent version?
		my $all_ids = MusicBrainz::Server::Annotation->GetAnnotationIDsForEntity($entity, $annotationtype);
		$not_most_recent = 1
			if $all_ids->[0] != $annotationid;
}

	$defaulttext = "" if (not defined $defaulttext);
	for ($defaulttext, $annotationtext, $origtext)
{
		defined() or next;
		$_ = MusicBrainz::Server::Markup->normalise($_);
}

	my $preview = 0;
	my $no_change = (
		defined($origtext)
			? $origtext eq $annotationtext
	: not $annotationtext =~ /\S/
	);

	if ($submitvalue ne "")
{
		my $url = "/show/$entitytype2/?${entitytype2}id=$id";

		if ($submitvalue =~ m/Cancel/i)
{
			MusicBrainz::Server::Annotation->ReleaseLock(
				$annotationtype, $id, $sid);
			return $m->comp("/comp/redirect", $url);
}
		elsif ($submitvalue =~ m/Preview/i)
{
			 $preview = 1;
}
		else
{
# Update the annotation, but only if the annotation
# has not been locked by another editor.
# -- Note: this does not work. removed the check.
			if (defined $annotationtext)
#and $locked eq $sid)
{
# Indicate that editing is done.
# Other users might still be editing this page.
				MusicBrainz::Server::Annotation->ReleaseLock(
					$annotationtype, $id, $sid);

				return $m->comp("/comp/redirect", $url)
					if $no_change;

				$m->comp(
					"/comp/entermods",
					DBH => $mb->{DBH},
					sub => sub {
						my @mods = Moderation->InsertModeration(
							DBH	=> $mb->{DBH},
							uid	=> $session{uid},
							privs => $session{privs},
							type => $self->attr('edittype'),
							# --
							artistid => $self->attr('useartistid') ? $entity->GetArtist() : undef,
							$entitytype . "id" => $id,
							text => $annotationtext,
							changelog => $changelog
						);

						$mods[0]->InsertNote($session{"uid"}, $notetext)
							if $mods[0]
							and $notetext =~ /\S/;
					},
					success_url => $url,
				) or return;

				die "Shouldn't get here";
}
}
}
</%perl>

<& /comp/sidebar-notitle, pagetitle => $self->attr('title') &>

%	if ($preview) {

%		my $tmp = MusicBrainz::Server::Annotation->newPreview($defaulttext);

		<table class="annotation" style="margin-bottom: 20px">
			<tr class="header">
%			if ($no_change) {
				<td>Preview (You have not made any changes!)</td>
% 			} else {
				<td>Preview</td>
%			}
			</tr>
			<tr class="text">
				<td><% $tmp->GetTextAsHTML |n %></td>
			</tr>
		</table>

		<table class="annotation" style="margin-bottom: 20px">
			<tr class="header">
				<td>Summary preview</td>
			</tr>
			<tr class="text">
				<td><% $tmp->GetShortTextAsHTML(qq[(<a href="#">Read&nbsp;more&hellip;</a>)]) |n %></td>
			</tr>
		</table>

%		if (defined $origtext) {
		<table class="annotation" style="margin-bottom: 20px">
			<tr class="header">
				<td>Differences: <& /edit/annotation/diff-legend &></td>
			</tr>
			<tr class="text">
				<td><% MusicBrainz::Server::Markup->diff_as_html($origtext, $defaulttext) |n %></td>
			</tr>
		</table>
%		}

%	}

	<form method="post" action="/edit/annotation/<%  $self->attr('entitytype') %>/edit.html" id="EditAnnotationForm">
		<script type="text/javascript" src="/edit/annotation/wikitoolbar.js"></script>

		<& /comp/tablebegin, title => $self->attr('title') &>

			<table class="formstyle">
				<tr>
					<td class="instructions">

%	# if the annotation is locked by someone else, do not allow
%	# editing it for a certain amount of time.
%	my $otherlock = ($locked and $locked ne $sid);

%	# -- Note: this does not work. removed the check.
%	my $disabled = qq!disabled="disabled"! if ($locked and $locked ne $sid);
%	$disabled = "";

%	if ($otherlock) {
						<div style="border: 1px dotted red; padding: 5px; margin-top: 15px">
							<span style="color:red; font-weight: bold">Warning:</span>
							Someone else is currently editing this annotation!
							Please try again later.
							</span>
						</div>
%	}

%	if ($not_most_recent) {
						<div style="border: 1px dotted red; padding: 5px; margin-top: 15px">
							<span style="color:red; font-weight: bold">Warning:</span>
							You are not editing the most recent annotation for this release.
							If you submit your changes, the most recent annotation will be
							overwritten!
							</span>
						</div>
%	}

					</td>
				</tr>
			</table>

			<table class="formstyle" style="width: 95%">
				<tr>
					<td>
						<& /comp/form/feedbackbox, "warning",
							"Do not post any copyrighted texts here!",
							qq!Please note that any content submitted to MusicBrainz will be
							made available to the public under !
						  . $m->scomp("/comp/linkdoc", "MusicBrainzLicense", "open licenses") &>

						<textarea name="annotationtext" rows="15" cols="60"
							style="width: 100%" class="wikitext" <% $disabled %>><% $defaulttext %></textarea></td>
				</tr>
				<tr class="spaced">
					<td>

						Enter a description of your changes (optional):<br/>
						<input name="changelog" type="text" size="60" maxlength="255" <% $disabled %> value="<% $changelog %>" /></td>
				</tr>
				<tr class="spaced">
					<td class="textarea">
						Enter edit note (optional):<br />
						<textarea name="notetext" id="notetext" class="textarea"
							rows="3" cols="52"><% $notetext %></textarea>
					</td>
				</tr>
				<tr>
					<td class="submitbuttons">

						<input type="submit" name="submitvalue" value="Save annotation &raquo;" <% $disabled %> />
						<input type="submit" name="submitvalue" value="Preview" <% $disabled %> />
						<input type="submit" name="submitvalue" value="Cancel" />

						<& /comp/form/hiddenfield, "annotationid", $annotationid &>
						<& /comp/form/hiddenfield, "id", $id &>
						<& /comp/form/focusfield, "annotationtext" &>
					</td>
				</tr>
				<tr>
					<td>
						<& /edit/annotation/wikiformat &>
					</td>
				</tr>
			</table>

		<& /comp/tableend &>

	</form>

<& /comp/footer &>

%# vi: set ts=4 sw=4 ft=mason :

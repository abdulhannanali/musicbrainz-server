<%doc>Review the history of all annotations of the given object.</%doc>

<%args>
	$id
	$expandids => undef
	$expand_all => undef
	$show_edits => undef
</%args>

<%init>
	my $self = $m->request_comp;
	my $entitytype = $self->attr('entitytype');
	my $entitytype2 = $entitytype eq "album" ? "release" : $entitytype;
	my $annotationtype = $self->attr('annotationtype');
</%init>

<%perl>

	# only logged in users may see this page
	$m->comp("/comp/checkloggedin", 1, 1)
		or return;

	# redirect to edits listing of this annotation object.
	if ($show_edits)
	{
		my %filter = (
			mod_type => [ $self->attr('edittype') ],
			orderby => "desc",
		);
		if ($entitytype eq "artist") {
			$filter{artist_type} = 3; # single artist
			$filter{artist_id} = $id;
		}
		else {
			$filter{object_type} = $entitytype;
			$filter{object_id} = $id;
		}

		return $m->comp(
			"/comp/redirect",
			"/mod/search/results.html?" . $m->comp("/comp/args-to-querystring.inc", %filter)
		);
	}

	# redirect to edits listing of this annotation object.
	MusicBrainz::Server::Validation::IsNonNegInteger($id) && $id
		or return $m->comp("/comp/layout/badarguments", text => "The id argument is invalid.");

	# Instantiate MusicBrainz object, and load the entity object
	my $mb = $m->comp("/comp/dblogin");
	my $entity = $m->comp("/comp/load$entitytype2", $mb, $id);

	# Load annotations.
	my %expand = map { $_ => 1 } split(' ', $expandids);
	my $annotations = MusicBrainz::Server::Annotation->GetAnnotationIDsForEntity($entity, $annotationtype);

	# prepare page, and boxtitle
	my $title = $self->attr('title');
	$m->comp("/comp/sidebar-notitle", pagetitle => $title);
	$m->comp("/comp/tablebegin", title => $title);

	# render the annotation subject
	$m->comp("/edit/annotation/subject", title => "Review annotation history for", entity => $entity, mb => $mb);

	# options
	$m->out("<ul>");
	$m->out(sprintf qq!<li><a href="/edit/annotation/$entitytype/history.html?id=$id%s">%s</a></li>!,
					$expand_all ? "" : "&amp;expand_all=1",
					$expand_all ? "Collapse list" : "Expand list");

	$m->out(qq!<li><a href="/edit/annotation/$entitytype/history.html?id=$id&amp;show_edits=1">Show edits</a></li>!);

 	unless (@$annotations)
 	{
		$m->out(qq!<li>No annotations available. <a href="/edit/annotation/$entitytype/edit.html?id=$id">Add an annotation &raquo;</a></li>!);
 	}
	$m->out("</ul>");
	$m->comp("/comp/tableend");


	# render the list of annotations
	for (my $i=0; $i < @$annotations; $i++)
	{
		my $annotationid = @$annotations[$i];
		my $annotation = MusicBrainz::Server::Annotation->new($mb->{DBH});
		$annotation->SetId($annotationid);
		$annotation->LoadFromId()
			or next;

		# the annotations are sorted top-down, see if there is a previous
		# annotation (e.g. another item in the list) to diff against.
		my $previd = $annotations->[$i + 1];
		$previd = 0 if (not defined $previd);

		$m->comp("/edit/annotation/show",
			annotation => $annotation,
			show_log => 1,
			show_info => 1,
			expand => $expand{$annotationid} || $expand_all,
			show_diff => $previd);

		$m->out("<br />");
	}

	$m->comp("/comp/footer");

</%perl>

%# vi: set ts=4 sw=4 ft=mason :

<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Shows the box of relationships
	#
	# $Id$
	#
</%perl>
<%args>

	$id
	$type
	$name
	$modlinks => 0
	$isrelpage => 0
	$expanded => 0
	$release => 0
	$to_type => undef
	$all => 0

</%args>

<script src="/scripts/jsselect.js" type="text/javascript"></script>
<script src="/scripts/rellinks.js" type="text/javascript"></script>
<div class="RelationshipBox">

<%perl>

my $_isEqual = sub {
	my ($a, $b) = @_;

	return ($a->{link_phrase} eq $b->{link_phrase} &&
			$a->{begindate} eq $b->{begindate} &&
			$a->{enddate} eq $b->{enddate});
};

my $mb = $m->comp("/comp/dblogin");
my %opts;
$opts{to_type} = $to_type if defined($to_type);
my @links = MusicBrainz::Server::Link->FindLinkedEntities($mb->{DBH}, $id, $type, %opts);
my $returnto = 0;

my $typename = ($type eq "url" ? "URL" : $type);
$typename = ($typename eq "album" ? "release" : $typename);

if (@links == 0)
{
	if ($type eq "artist") {
		$m->out("This $typename has no artist, label or URL relationships. <a href=\"/show/artist/appears-on.html?artistid=$id\">View track and release relationships</a>.<br />");
	}
	else {
		
		$m->out("This $typename has no relationships.<br />");
	}
}
else
{
	my $max = scalar(@links);
	my (@coll, $item, $i, $count, $lines);

	for($i = 0; $i < $max; $i++)
	{
		$item = $links[$i];
		if ($item->{link0_type} ne $type || $item->{link0_id} != $id)
		{
			@$item{qw(
				link0_type			link1_type
				link0_id			link1_id
				link0_name			link1_name
				link0_sortname		link1_sortname
				link0_resolution	link1_resolution
				link_phrase			rlink_phrase
			)} = @$item{qw(
				link1_type			link0_type
				link1_id			link0_id
				link1_name			link0_name
				link1_sortname		link0_sortname
				link1_resolution	link0_resolution
				rlink_phrase		link_phrase
			)};
			$returnto = 1;
		}
	}

	@links = sort
	{
		my $c = $a->{link_phrase} cmp $b->{link_phrase};
		return $c if ($c);
		$c = $a->{enddate} cmp $b->{enddate};
		return $c if ($c);
		$c = $a->{begindate} cmp $b->{begindate};
		return $c if ($c);
		return $a->{link1_name} cmp $b->{link1_name};
	} @links;

	my $typeshow = $type eq "album" ? "release" : $type;
	$m->comp("/comp/relationship/relationshiplist", id => $id,
	         mb => $mb,
	         relationships => \@links,
	         max_lines => ($expanded || $isrelpage) ? 100000 : 4,
	         max_links_per_line => ($expanded || $isrelpage) ? 100000 : 4,
	         track => 0, type => $typeshow, expanded => $expanded,
	         modlinks => $modlinks, returnto => $returnto, name => $name,
	         release => $release);
	$m->out("<br/>");

}

$m->comp('/comp/ar/ShowARLinks', id => $id, type => $type, isrelpage => $isrelpage,
								 expanded => $expanded, count => scalar(@links),
								 name => $name, all => $all);

my $recent_links = ($session{recent_links} ||= []);
if (scalar(@$recent_links) == 0)
{
}
elsif (scalar(@$recent_links) == 1)
{
	</%perl>
	<hr>
	<p>
		Create a relationship with:
	</p>
	<ul>
		<li><& /comp/ar/ShowEntityLink, simple => 0,
			id => $recent_links->[0][1],
			type => $recent_links->[0][0],
			name => $recent_links->[0][2] &>
		 [ <& /comp/ar/ShowRemoveLink,
			targetid => $id,
			targettype => $type,
			id => $recent_links->[0][1],
			type => $recent_links->[0][0],
			name => $recent_links->[0][2],
			isrelpage => $isrelpage&> ]</li>
	</ul>

	<p>
	You have only selected one element.&nbsp; Please select another element
	that you want to relate to <b><% $recent_links->[0][2] %></b> by navigating to
	its page, then clicking on the <em>Use this ... in a relationship</em> link.
	</p>

	<p>
		[
% unless ($type eq "url") {
		<a href="/edit/relationship/addurl.html?id=<% $recent_links->[0][1] %>&amp;type=<% $recent_links->[0][0]
			%>&amp;name=<% uri_escape($recent_links->[0][2]) %>">Relate to URL</a> |
% }
% unless ($type eq $recent_links->[0][0] && $id == $recent_links->[0][1]) {
%		my $url;
%		if ($type le $recent_links->[0][0]) {
%			$url = "link0=$type=$id&link1=$recent_links->[0][0]=$recent_links->[0][1]&returnto=0";
%		} else {
%			$url = "link1=$type=$id&link0=$recent_links->[0][0]=$recent_links->[0][1]&returnto=1";
%		}
		<a href="/edit/relationship/add.html?<% $url %>">Create relationship with this <% $typename %></a>
		|
% }
		<& /comp/ar/ShowCancelLink, targetid => $id, targettype => $type, isrelpage => $isrelpage &>
		| <a href="/edit/artist/add.html">Add new artist</a>
		]

		<%perl>
}
elsif (scalar(@$recent_links) == 2)
{
	</%perl>
	<hr>
	<p>
		Create a relationship between:
	</p>
	<ul>
		<li><& /comp/ar/ShowEntityLink, simple => 0,
			id => $recent_links->[1][1],
			type => $recent_links->[1][0],
			name => $recent_links->[1][2] &>
			[ <& /comp/ar/ShowRemoveLink,
				targetid => $id,
				targettype => $type,
				id => $recent_links->[1][1],
				type => $recent_links->[1][0],
				name => $recent_links->[1][2],
				isrelpage => $isrelpage &> ]</li>
		<li><& /comp/ar/ShowEntityLink, simple => 0,
			id => $recent_links->[0][1],
			type => $recent_links->[0][0],
			name => $recent_links->[0][2] &>
			[ <& /comp/ar/ShowRemoveLink,
				targetid => $id,
				targettype => $type,
				id => $recent_links->[0][1],
				type => $recent_links->[0][0],
				name => $recent_links->[0][2],
				isrelpage => $isrelpage &> ]</li>
	</ul>

	<p>
		[ <a href="/edit/relationship/add.html?link0=<%
			$recent_links->[1][0] %>=<% $recent_links->[1][1] %>&amp;link1=<%
			$recent_links->[0][0] %>=<% $recent_links->[0][1] %>">Create relationship</a>
		| <& /comp/ar/ShowCancelLink, targetid => $id, targettype => $type, isrelpage => $isrelpage &>
%	if (UserStuff->IsLinkModerator($session{privs})) {
		| <a href="/edit/relationships/link_type_roots.html">Edit link types</a>
%	}
		| <a href="/edit/artist/add.html">Add new artist</a>
		]
	</p>
	<%perl>
}
else
{
	my $hi = @$recent_links - 1;
	</%perl>
	<hr>
	<p>
		You have selected more than two elements. The last two elements are:
	</p>
	<ul>
		<li><& /comp/ar/ShowEntityLink, simple => 0,
			id => $recent_links->[1][1],
			type => $recent_links->[1][0],
			name => $recent_links->[1][2] &>
			[ <& /comp/ar/ShowRemoveLink,
				targetid => $id,
				targettype => $type,
				id => $recent_links->[1][1],
				type => $recent_links->[1][0],
				name => $recent_links->[1][2],
				isrelpage => $isrelpage &> ]</li>
		<li><& /comp/ar/ShowEntityLink, simple => 0,
			id => $recent_links->[0][1],
			type => $recent_links->[0][0],
			name => $recent_links->[0][2] &>
			[ <& /comp/ar/ShowRemoveLink,
				targetid => $id,
				targettype => $type,
				id => $recent_links->[0][1],
				type => $recent_links->[0][0],
				name => $recent_links->[0][2],
				isrelpage => $isrelpage &> ]</li>
	</ul>

	<p>
		[ <a href="/edit/relationship/add.html?link0=<%
			$recent_links->[1][0] %>=<% $recent_links->[1][1] %>&amp;link1=<%
			$recent_links->[0][0] %>=<% $recent_links->[0][1] %>">Create relationship</a>
		| <a href="/edit/relationship/showelements.html">Show all elements</a>
		| <& /comp/ar/ShowCancelLink, targetid => $id, targettype => $type, isrelpage => $isrelpage &>
%	if (UserStuff->IsLinkModerator($session{privs})) {
		 | <a href="/edit/relationships/link_type_roots.html">Edit link types</a>
%	}
		| <a href="/edit/artist/add.html">Add new artist</a>
		]
	</p>
	<%perl>
}

</%perl>
</div>

%# vi: set ts=4 sw=4 ft=mason :

<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Renders the header (and footer) display for paginated lists. Used in
	# browseartists.html, browsereleases.html and the reports.
	#
	# $Id$
	#
</%perl>
<%perl>

	# I used to have an %args block here but Mason kept crashing on it
	# --TODO: check if that's still the case.

	my $offset = $ARGS{offset};
	my $pagesize = $ARGS{pagesize};
	my $url = $ARGS{url};
	my $args = $ARGS{args};
	my $numitems = $ARGS{numitems};
	my $numlinks = $ARGS{numlinks} || 6;
	my $snaptoend = $ARGS{snaptoend} || 2;

	my $index = int($offset / $pagesize);
	my $pagecount = int(($numitems+$pagesize-1) / $pagesize);

	my $start = $index - $numlinks;
	if ($start < $snaptoend) { $start = 0 }

	my $end = $index + $numlinks;
	if ($end > $pagecount-1-$snaptoend) { $end = $pagecount-1 }

	my $qsargs = $m->comp(
		"/comp/args-to-querystring.inc",
		%$args,
		offset => undef,
		page => undef,
	);

	my $urlqs = $url . "?";
	$urlqs .= $qsargs . "&"
		unless $qsargs eq "";

</%perl>

	<table class="pageselector">
		<tr>
			<td class="jump">
				<form method="get" action="<% $url %>">
					<table>
						<tr>
							<td class="jumpfield">
								Page <input type="text" name="page" value="<% $index+1 %>"
									size="1"
									title="Enter the page number you would like to jump to, and press Enter or the Go! button to jump."
								/>
								of <% $pagecount %>
							</td>
							<td class="jumpbutton">
								<input type="submit" value="Go!" title="Go!" />
								<& /comp/args-to-hidden-fields.inc, %$args &></td>
						</tr>
					</table>
				</form></td>

			<td class="list">

%	if ($pagecount > 1)
%	{
				<table class="selectorbuttons">
					<tr>

<%perl>

		if ($index > 0)
		{
			$m->out(sprintf qq!<td><a href="%soffset=0" title="Go to first page">&laquo;</a></td>!, encode_entities($urlqs));
			$m->out(sprintf qq!<td><a href="%soffset=%d" title="Go to previous page">&lt;</a></td>!, encode_entities($urlqs), ($index - 1) * $pagesize);
		}
		else
		{
			$m->out(qq!<td class="inactive" title="Not available"><span>&laquo;</span></td>!);
			$m->out(qq!<td class="inactive" title="Not available"><span>&lt;</span></td>!);
		}
		for my $i ($start .. $end)
		{
			if ($i != $index)
			{
				$m->out(sprintf qq!<td><a href="%soffset=%d" title="Go to page">%s</a></td>!,
					encode_entities($urlqs),
					($i) * $pagesize,
					($i + 1));
			}
			else
			{
				$m->out(qq!<td class="current"><span>! . ($i + 1) . "</span></td>");
			}
		}
		if ($index < $pagecount - 1)
		{
			$m->out(sprintf qq!<td><a href="%soffset=%d" title="Go to next page">&gt;</a></td>!, encode_entities($urlqs), ($index + 1) * $pagesize);
			$m->out(sprintf qq!<td><a href="%soffset=%d" title="Go to last page">&raquo;</a></td>!, encode_entities($urlqs), ($pagecount - 1) * $pagesize);
		}
		else
		{
			$m->out(qq!<td class="inactive" title="Not available"><span>&gt;</span></td>!);
			$m->out(qq!<td class="inactive" title="Not available"><span>&raquo;</span></td>!);
		}

</%perl>

					</tr>
				</table>

%	}

			</td>
		</tr>
	</table>

%# vi: set ts=4 sw=4 ft=mason :

<%args>

	$index => ""
	$page => "/browseartists.html"

	# for the browsereleases page, we need additional parameters.
	$artists => ""
	$relstatus => ""
	$reltype => ""

</%args>
<%perl>
	(my $pageq = $page) .= ($page =~ /\?/ ? "&amp;" : "?");
	my ($i, $p, $t);


	$m->out(qq!<table class="browsebox">!);
	$m->out(qq!<tr>!);

	# render the current index.
	$index = uc($index);
	$m->out(qq!<td class="index">!);
	$t = $index;
	$t =~ s/_/?/g;
	$t =~ s/ /_/g;


</%perl>
	<form method="get" action="<% $pageq %>">
		<table>
			<tr>
				<td class="indexfield">
%			$m->out(sprintf qq!<input type="hidden" name="%s" value="%s" />!, "artists", $artists) if ($artists ne "");
%			$m->out(sprintf qq!<input type="hidden" name="%s" value="%s" />!, "relstatus", $relstatus) if ($relstatus ne 0);
%			$m->out(sprintf qq!<input type="hidden" name="%s" value="%s" />!, "reltype", $reltype) if ($reltype ne 0);
			<input type="text" name="index" value="<% $t %>"
				size="<% length($index)+1 %>"
				title="Enter the first few letters of the entries you would like to find, and press Enter or the Go! button to start browsing."
				/></td>
				<td class="indexbutton">
					<input type="submit" value="Go!" title="Go!" /></td>
			</tr>
		</table>
	</form>
<%perl>
	$m->out(qq!</td>!);

	# append other arguments to page url if they are != default value.
	$pageq .= "artists=$artists&amp;" if ($artists ne "");
	$pageq .= "relstatus=$relstatus&amp;" if ($relstatus ne 0);
	$pageq .= "reltype=$reltype&amp;" if ($reltype ne 0);


	# render the list of character (+symbol, space placeholders)
	$m->out(qq!<td class="symbols">!);
	$m->out(qq!<table class="symbols"><tr>!);

	for($i = 0; $i < 13; $i++)
	{
		my $addsymbol = $pageq . "index=" . $index;

		if ($i == 0)
		{
			$m->out(qq!<td class="special">!);
			$m->out(sprintf qq!<a href="$addsymbol%s">symbol</a><br />!, "_");
			$m->out(sprintf qq!<a href="$addsymbol%s">space</a> !, "+");
			$m->out(qq!</td>!);
		}


		$m->out(qq!<td>!);
		$m->out(sprintf qq!<a href="$addsymbol%s">%s</a><br />!, chr($i + 65), chr($i + 65));
		$m->out(sprintf qq!<a href="$addsymbol%s">%s</a> !, chr($i + 78), chr($i + 78));
		$m->out(qq!</td>!);
	}
	$m->out(qq!</tr></table></td>!);


	# if an index is set, provide back link (remove last char added)
	# and a restart link.
	if (length($index) > 0)
	{

		# chop last character for Back link.
		chop($t = $index);
		my $backlink = $pageq . "index=" . $t;

		$m->out(qq!<td class="links">[ !);
		$m->out(qq!<a href="$backlink">Back</a> | !);
		$m->out(qq!<a href="$page">Start&nbsp;over</a> !);
		$m->out(qq! ]</td> !);

	} else {
		$m->out(qq!<td>!);
		$m->out(qq!  Pick a letter to start browsing!);
		$m->out(qq!</td>!);
	}

	$m->out(qq!</tr>!);
	$m->out(qq!</table>!);

</%perl>

%# vi: set ts=4 sw=4 ft=mason :

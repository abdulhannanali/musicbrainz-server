<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Renders a given artist, or release object. Used in the edit forms to
	# display the old value of the entity being edited.
	# If the mp_type (one of ModDefs constant types) is given, the provided
	# entity is queried for the respective flag. If a pending edit of the
	# given type is flagged, the entity is highlighted using the "mp"
	#css class.
	#
	# $URL$
	# $Id$
	#
</%perl>
<%args>
	$artist => undef
	$release => undef

	$display => undef
	$mp_type => undef
</%args>
<%perl>

	my ($type, $object, $mp);

	if ($artist)
	{
		$type = "artist";
		$object = $artist;

		SWITCH: {
			 # there are not methods which provide details of
			 # pending artist moderation types
			if ($mp_type == &ModDefs::MOD_EDIT_ARTIST) { };
			if ($mp_type == &ModDefs::MOD_EDIT_ARTISTALIAS) { };
			if ($mp_type == &ModDefs::MOD_EDIT_ARTISTNAME) { };
			if ($mp_type == &ModDefs::MOD_EDIT_ARTISTSORTNAME) { };
			$mp = $artist->GetModPending;
		}
	}
	elsif ($release)
	{
		$type = "album";
		$object = $release;

  		SWITCH: {
			if ($mp_type == &ModDefs::MOD_EDIT_ALBUM_LANGUAGE)
			{
				$mp = $release->GetLanguageModPending;
				last SWITCH;
			}
			if ($mp_type == &ModDefs::MOD_EDIT_ALBUMATTRS)
			{
				$mp = $release->GetAttributeModPending;
				last SWITCH;
			}
			$mp = $release->GetModPending;
		}
	}
	else
	{
		die("Did not get required \$artist or \$release argument.");
	}

	my $css = "oldtextfield" . ($mp ? "-modpending" : "");


	# artistsortname can be passed in using the $display argument.
	# if display is not set, fall back to name.
	$display = $display || $object->GetName;


	my $typeicon = $type;
	$typeicon = "release" if ($typeicon eq "album");

	# print the link.
	$m->out(qq!<img src="/images/entity/! . $typeicon . qq!_small.gif" alt="" class="entityicon"/>!);
	$m->out(qq!<span class="$css">!);
	$m->out(sprintf
				qq!<a href="/%s/%s.html">%s</a>!,
				$type,
				$object->GetMBId,
				$display
			);
	$m->out(qq!</span>!);

</%perl>
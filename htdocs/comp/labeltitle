<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Render the label title box.
	#
	# $Id$
	#
</%perl>
<%args>

	$label
	$link => 1				# -- deprecated

	$showlinks => undef		# show info links
	$showmodlinks => 1		# show editing links.
							# -- TODO: rename to showeditlinks

</%args>
<%perl>

	# preferred way of calling this component,
	# backwards compability.
	$showlinks = defined $showlinks ? $showlinks : $link;

	my $id = $label->GetId;
	my $mbid = $label->GetMBId;
	my $name = $label->GetName;
	my $sortname = $label->GetSortName;
	my $country = $label->GetCountry;
	my $type = $label->GetType;
	my $type_name = Label::GetTypeName($type) || '';
	my $labelcode = $label->GetLabelCode;
	my $begin = $label->GetBeginDate;
	my $end = $label->GetEndDate;
	my $resolution = $label->GetResolution;

	# compile begin- and end dates
	$begin = MusicBrainz::Server::Validation::MakeDisplayDateStr($begin);
	$end = MusicBrainz::Server::Validation::MakeDisplayDateStr($end);
	my $date_str = '';
	if ( $begin and $end )
	{
		$date_str = "$begin - $end";
	}
	elsif ( $begin )
	{
		$date_str = "begin $begin";
	}
	elsif ( $end )
	{
		$date_str = "end $end";
	}


	$m->out(qq!<table class="artisttitle">!);

	# Row 1: the label name (link) and sortname
	$m->out(qq!<tr valign="top">!);
	$m->out(qq!<td class="icon" rowspan="2">!);
	$m->out(qq!  <a href="/label/$mbid.html" title="Go to the label page"><img src="/images/licon_lg.png" alt="" /></a></td>!);
	$m->out(qq!<td class="title">!);
	$m->out(qq!  <a href="/label/$mbid.html" title="Go to the label page">!);
	$m->out(qq!  <span class="mp">!) if ($label->GetModPending);
	$m->out($m->interp->apply_escapes($name, 'h'));
	$m->out(qq!  </span>!) if ($label->GetModPending);
	$m->out(qq!</a></td></tr>!);

	# info box, a) resolution b) start-end date c) label-type d) sortname
	$m->out(qq!<tr>!);
	$m->out(qq!<td class="info">!);
	$m->out($m->interp->apply_escapes($resolution, 'h') . qq!<br />!) if ($resolution);

	if ($labelcode || $country || $date_str || $type)
	{
		if ($labelcode)
		{
			$m->out("LC ".$m->interp->apply_escapes($labelcode, 'h'));
			$m->out(", ") if ($date_str or $country or $type);
		}
		if ($date_str)
		{
			$m->out($date_str);
			$m->out(", ") if ($country or $type);
		}
		if ($country)
		{
			my $country_obj = MusicBrainz::Server::Country->new($label->{DBH});
			my $c = $country_obj->newFromId($country);
			$m->out($c->GetName);
			$m->out(", ") if ($type);
		}
		$m->out("Type: $type_name") if ($type);
		$m->out("<br />");
	}
	$m->out($m->interp->apply_escapes($sortname, 'h')) if ($name ne $sortname);

	$m->out(qq!</td>!);
	$m->out(qq!</tr>!);


	# Row 2: non-editing links
	if ($showlinks)
	{
		$m->out(qq!<tr>!);
		$m->out(qq!<td colspan="2" class="links">!);
		$m->out(qq!Info: [ !);

#		$m->out(qq!<a href="!);
#		$m->comp("/comp/copyable-link",
#			id => $mbid, name => $name,
#			type => "label", style => "url");
#		$m->out(qq!">Permanent link</a> | !);

		$m->out(sprintf qq!<a href="/show/permlink.html?id=$mbid&amp;type=label" title="Link to this label">Link to this</a> | !, uri_escape($name));
		$m->out(qq!<a href="/show/label/details.html?labelid=$id" title="label details">Details</a> | !);
		$m->out(qq!<a href="/show/label/aliases.html?labelid=$id" title="label aliases">Aliases</a> | !);
		$m->comp("/comp/googlelink", search => $name, text => "Search&nbsp;google", raw => 1);
		if ($session{uid})
		{
			$m->out(qq! | <a href="/mod/search/pre/label.html?labelid=$id" title="View edits made against this label">View label edits</a>!);
		}
		$m->out(qq! ]</td></tr>!);
	}


	# Row 3: editing links
	if ($showmodlinks)
	{
		$m->out(qq!<tr>!);
		$m->out(qq!<td colspan="2" class="editlinks">!);
		$m->out(qq!Edit: [ !);
		if ($session{uid})
		{
			$m->out(qq!<a href="/edit/label/edit.html?labelid=$id">Edit label</a>!);
			$m->out(qq! | <a href="/edit/label/merge.html?labelid=$id">Merge into ...</a>!);
#			$m->out(qq! | <a href="/user/subscribe.html?labelid=$id">Subscribe</a>!);
		}
		else
		{
			$m->out(qq!<a href="/login.html">Log in</a> to edit this!);
		}
		$m->out(qq! ]</td></tr>!);
	}

	$m->out(qq!</table>!);

</%perl>

%# vi: set ts=4 sw=4 ft=mason :

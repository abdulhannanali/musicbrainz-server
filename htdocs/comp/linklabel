<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Link to an label. Either an label object, or id and name arguments
	# are used to create the url. If there is a non-empty resolution to available,
	# (either provided as the resolution argument or from the given label object),
	# it will be displayed in a smaller font on the right side of the label link.
	#
	# $Id$
	#
</%perl>
<%args>

	# preferred way of calling - provide Label object
	$label => undef

	# specific arguments can be provided, too
	$id => undef
	$mbid => undef
	$name => undef
	$labelcode => ""
	$resolution => undef

	# rendering options
	$showresolution => 1
	$icon => 1
	$strong => 1
	$title => ""
	$modpending => 0

</%args>
<%perl>

	if (defined $label)
	{
		$id = $label->GetId;
		$mbid = $label->GetMBId;
		$name = $label->GetName;
		$labelcode = $label->GetLabelCode;
		$resolution = $label->GetResolution;
	}
	die ("\$id and $name are required") if (not defined $id || not defined $name);

	# use given title, or use sortname
	my $showtitle = "Label";
	$showtitle .= " ($title)" if ($title);
	$showtitle .= " (LC $labelcode)" if ($labelcode ne "");
	$showtitle .= " (Comment: $resolution)" if ($resolution ne "");

	$id = -1 if (not $id || $id == &ModDefs::DLABEL_ID);

	# enclose the value in title in proper attribute tag,
	# if it was set.
	$showtitle = ' title="' . $m->interp->apply_escapes($showtitle, 'h').'"';

	$m->out(qq!<span class="modpending">!) if ($modpending);

	# use span with the background image set to render the label icon.
	$m->out(sprintf qq!<span class="linklabel%s"%s>!,
					0 && $icon ? "-icon" : "",
					$title);

	# icon was cut off sometimes, we'll rather do it the classic way.
	if ($icon && !UserPreference::get("css_noentityicons"))
	{
		$m->out(qq!<img src="/images/entity/release_small.gif" alt="Label" class="entityicon" width="13" height="13" />!);
	}

	# if the id not negative, show a link,
	# else show the name only
	if (MusicBrainz::Server::Validation::IsNonNegInteger($id))
	{
		# if the MBID is defined, use the "preferred" way of displaying label links.
		$m->out(sprintf qq!<a href="%s" class="linkentity%s" $showtitle>%s</a>!,
						defined $mbid ? "/label/$mbid.html" : "/show/label/?labelid=$id",
						$strong ? "-strong" : "",
						$m->interp->apply_escapes($name, 'h'));
	}
	else
	{
		# use the deletedentity span to visualize a deleted entity.
		$m->out(sprintf qq!<span class="deletedentity">%s</span>!,
		$m->interp->apply_escapes($name, 'h'));
	}

	$m->out("</span>");
	$m->out("</span>") if ($modpending);

	# render resolution?
	if ($showresolution && $resolution ne "")
	{
		$m->out(qq! <span class="labelresolution">!);
		$m->out(sprintf qq! (%s) !,
						$m->interp->apply_escapes($resolution, 'h'));
		$m->out(qq! </span>!);
	}

</%perl>
%# -- no empty line here, else an additional space will be
%#    inserted before the dot at the end of sentences.
%# vi: set ts=4 sw=4 ft=mason :
<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Link to a url. Either a url object, or id, and name arguments
	# are used to create the url.
	#
	# $Id$
	#
</%perl>
<%args>

	# preferred way of calling - provide URL object
	$url => undef

	# specific arguments can be provided, too
	$id => undef
	$name => undef
	$href => undef
	$title => undef

	# rendering options
	$icon => 0
	$strong => 0

</%args>
<%perl>

	if (defined $url)
	{
		$id = $url->GetId;
		$name = $url->GetName;
	}
	die ("$id and $name are required") if (not defined $id || not defined $name);

	# fall back to stored name if no href is given.
	$href ||= $name;

	# fall back to href if no titleis given.
	$title ||= $href;
	$title = encode_entities($title);

	# shorten url's that are longer than ~75 chars
	my $shorturl = (length($name) > 50
			 ? encode_entities(substr($name, 0, 48)) . "&#8230;"
			 : encode_entities($name));

	# render link to /show/url page.
	$m->out(qq!<strong>!) if ($strong);
	$m->out(qq!<img src="/images/entity/url_small.gif" alt="URL" class="entityicon" width="13" height="13" />!) if ($icon);
	$m->out(qq!<a href="$href" rel="nofollow" title="$title">$shorturl</a>!);
	$m->out(qq!</strong>!) if ($strong);

	# show clickable link to open the url target
	$m->out(qq! <span class="nobr">[<a href="/show/url/?urlid=$id">info</a>]</span>!)
		if (defined $href);

</%perl>
%# -- no empty line here, else an additional space will be
%#    inserted before the dot at the end of sentences.
%# vi: set ts=4 sw=4 ft=mason :
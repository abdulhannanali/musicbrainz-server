<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Link to a musicbrainz user. Either a user object, or id, and name arguments
	# are used to create the user.
	#
	# $Id$
	#
</%perl>
<%args>

	# preferred way of calling - provide user object
	$user => undef

	# specific arguments can be provided, too
	$id => undef
	$name => undef
	$title => "editor"

	# rendering options
	$icon => 1
	$strong => 1
	$shorten => 1

</%args>
<%perl>

	if (defined $user)
	{
		$id = $user->GetId;
		$name = $user->GetName;
	}
	die ("\$id or \$name are required") if (not defined $id and not defined $name);

	my ($arg, $usericon, $iconalt) = ("", lc($title)."_small", ucfirst($title));
	if (defined $id)
	{
		$arg = "userid=$id" ;
	}
	elsif (defined $name)
	{
		$arg = "username=$name" ;
	}

	my $dispname = $m->interp->apply_escapes($name, 'h');
	my $shortname = $dispname;
	if ($shorten && length($name) > 11)
	{
		$shortname = substr($name, 0, 10);
		$shortname = $m->interp->apply_escapes($shortname, 'h');
		$shortname .= "&#8230;";
	}

	# render link.
	$m->out(qq!<strong>!) if ($strong);

	if ($icon && !UserPreference::get("css_noentityicons"))
	{
		$m->out(qq!<img src="/images/entity/$usericon.gif" alt="$iconalt" class="entityicon" width="13" height="13" />!)
	}

	$m->out(qq!<a href="/show/user/?$arg" title="$dispname">$shortname</a>!);
	$m->out(qq!</strong>!) if ($strong);

</%perl>
%# -- no empty line here, else an additional space will be
%#    inserted before the dot at the end of sentences.
%# vi: set ts=4 sw=4 ft=mason :
<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Loads a Release from the database. Accepts either a rowid, or a MBID
	# as identifier. If the release was loaded successfully, return a reference to
	# it, else show an error page.
	#
	# Usage
	# -----------------------------------------------------------------------------
	# my $release = $m->comp("/comp/loadrelease", $mb, $releaseid || $mbid);
	#
	# $Id$
	#
</%perl>
<%perl>

	# get passed in arguments
	my ($mb, $id) = @_;

	my $error = "";
	if (not defined $mb)
	{
		$error = "Parameter <strong>mb</strong> of type MusicBrainz is required";
	}
	if (not defined $id or not MusicBrainz::IsNonEmptyString($id))
	{
		$error = "Parameter <strong>id</strong> of type String (MBID/ReleaseID) is required";
	}

	# if paramters are ok.
	if ($error eq "")
	{
		my ($releaseid, $mbid) = ("", "");

		# if the $id parameter is a GUID
		$mbid = $id if (MusicBrainz::IsGUID($id));
		$releaseid = $id if (MusicBrainz::IsNonNegInteger($id) && $id);

		# if the $id parameter is a GUID
		my $release = Album->new($mb->{DBH});
		if ($mbid ne "")
		{
			$release->SetMBId($mbid);
			$error = sprintf "Release with <strong>MBID</strong> %s not found in the database", $mbid;
		}
		else
		{
			$release->SetId($releaseid);
			$error = sprintf "Release with <strong>ReleaseID</strong> #%s not found in the database", $releaseid;
		}
		if ($release->LoadFromId(1))
		{
			return $release;
		}
	}

	# render error message.
	$m->comp("/comp/sidebar-notitle", pagetitle => "Error");

	$m->comp("/comp/tablebegin", title => "Could not load Release");
	$m->out($error);
	$m->comp("/comp/tableend");

	# add this error to our bug tracker?

	my $component = "MusicBrainz Server";
	my $summary = "Could not load Release";
	my $reporter = "anonymous";
	if ($session{"uid"})
	{
		my $user = UserStuff->newFromId($mb->{DBH}, $session{"uid"}) or die("fatal");
		$reporter = $user->GetName;
	}
	my $description = uri_escape("Error was: $error");

	my $ticketURL = "http://bugs.musicbrainz.org/newticket?component=$component&summary=$summary&reporter=$reporter&description=$description";

	$m->comp("/comp/tablebegin", title => "Found a bug?");
	$m->out(qq!If you think this is not a feature, but a bug - Please let us know, and enter !);
	$m->out(qq!it on <a href="$ticketURL" title="MusicBrainz Bug Tracker">our bug tracker</a>. Thanks !);
	$m->comp("/comp/tableend");

	$m->comp("/comp/footer");
	$m->abort();

</%perl>

%# vi: set ts=4 sw=4 ft=mason :

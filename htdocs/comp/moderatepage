<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# This component lists the edits which match the given query. Open edits
	# can be vored on, and own edits can be deleted.
	#
	# $Id$
	#
</%perl>
<%args>

	$query
	$voter_id
	$page => undef
	$offset => undef
	$args

</%args>
<%perl>

	my $max_items = UserPreference::get('mods_per_page');
	$offset = ($page-1) * $max_items if (not defined $offset and defined $page);
	$offset = 0 if (not defined $offset);
	$offset = 0 if ($offset < 0);

	# Instantiate MusicBrainz object, and fetch list of
	# matching edit objects
	my $mb = $m->comp("/comp/dblogin");
	my $edit = Moderation->new($mb->{DBH});
	my ($result, $edits, $total_edits) = $edit->GetModerationList(
		$query, $voter_id,
		$offset, $max_items,
	);

	# If timed out, make an empty list
	$edits ||= [];
	$m->comp("/comp/redirect", "/mod/search/index.html")
		if ($result == &Moderation::SEARCHRESULT_NOQUERY);

	# Do we show the "vote" button?
	# XXX this is based upon $edit->GetVote, but that might be showing someone
	# else's votes, not ours!
	my $show_button = 0;

	my %notes;
	if (@$edits)
	{
		my $notes = MusicBrainz::Server::ModerationNote->new($mb->{DBH});
		my @notes = $notes->newFromModerationIds(
			map { $_->GetId } @$edits
		);
		push @{ $notes{ $_->GetModerationId } }, $_
			for @notes;
	}

</%perl>

<& /comp/sidebar-notitle, pagetitle => "Browse edits" &>
	<& /comp/tablebegin, title => "Browse edits" &>

		<table class="formstyle">
			<tr>
				<td class="label">
					Quick links:</td>
				<td>
					<a href="/mod/search/pre/new.html">New edits</a> |
					<a href="/mod/search/pre/subscriptions.html">Subscribed</a> |
					<a href="/mod/search/select-filter.html">Predefined edit search</a> |
					<a href="/mod/search/index.html?<% $m->comp('/comp/args-to-querystring.inc', %$args) %>">Advanced edit search</a> |
					<a href="/mod/jump.html">Jump to #</a>
				</td>
			</tr>
			<tr>
				<td class="label">
					Help:</td>
				<td>
					<& /comp/linkdoc, "EditingFAQ", "Editing FAQ", 0, 0 &> |
					<& /comp/linkdoc, "StyleGuideline", "Style guidelines", 0, 0 &> |
					<& /comp/linkdoc, "HowEditingWorks", "How editing works", 0, 0 &>
				</td>
			</tr>
			<tr class="top">
				<td class="label">
					Results:</td>
				<td>

%	if ($result == &Moderation::SEARCHRESULT_TIMEOUT)
%	{

					<strong>Your query was cancelled because it was taking too
					long.</strong> Please try to <a href="/mod/search/index.html?<%
					$m->comp('/comp/args-to-querystring.inc', %$args) %>">narrow
					down your search</a>, or try again later.


%	}
%	elsif (not @$edits)
%	{

					<strong>No edits found matching the current selection.</strong>
					Use the <a href="/mod/search/index.html?<%
					$m->comp('/comp/args-to-querystring.inc', %$args) %>">advanced
					edit search</a> to find the edits you are looking for.

%	}
%	elsif (defined $total_edits)
%	{

					Found <% $total_edits %> edit<% ($total_edits == 1) ? "" : "s" %>
					matching the current selection.

% 	}

				</td>
			</tr>
		</table>

%	if (defined $total_edits and
%		$total_edits-$offset > $max_items || $offset > 0)
%	{
%		# aligning the browse controls with the rest of the items.

		<div style="margin-left: 169px;">
			<& /comp/browse/pageselector,
			   url => "/mod/search/results.html",
			   args => $args,
			   offset => $offset,
			   pagesize => $max_items,
			   numitems => $total_edits,
			&>
		</div>

%	}

	<& /comp/tableend &>

% 	if (@$edits)
%	{

	<form method="post" action="/bare/vote.html">

		<table class="editlist" id="editlist">

<%perl>
		for my $obj (@$edits)
		{
			my $n = $notes{ $obj->GetId } || [];
			$m->comp("/comp/showmod",
				edit => $obj,
				notes => $n,
				voter => $voter_id,
				voteflag=> \$show_button);
		}
</%perl>

		</table>

		<div style="text-align: right; margin-bottom: 20px">
			Click here to <% $show_button ? "vote" : "submit notes" %> on the items on this page:
			<input type="hidden" name="url" value="<% $r->uri() . "?" . $r->args() %>" />
			<input type="submit" name="submit" value="Continue &raquo;" />
		</div>

	</form>


%		my $show_pageselector = (($total_edits - $offset > $max_items or $offset > 0) and @$edits);
%		if ($show_pageselector)
%		{

		<& /comp/tablebegin, title => "Browse edits" &>

		<table style="width: 98%">
			<tr>
				<td>
				<& /comp/browse/pageselector,
				   url => "/mod/search/results.html",
				   args => $args,
				   offset => $offset,
				   pagesize => $max_items,
				   numitems => $total_edits,
				&></td>
			</tr>
		</table>

		<& /comp/tableend &>

%		}

		<& /comp/js/diffcollapse &>

<%perl>
		# Show "All votes" controls if:
		# 1. Editor has the rigths to use it (currently AutoEditor, this may change...)
		# 2. There are open edits not belonging to the current user in the edits list to display
		if (UserStuff->IsAutoEditor($session{privs})) 
		{
			my $has_open_edits_by_others = 0;
			$has_open_edits_by_others ||= ($_->GetStatus == &ModDefs::STATUS_OPEN) && ($_->GetModerator != $session{"uid"}) foreach @$edits;
			if($has_open_edits_by_others)
			{
				$m->out(qq!<input type="hidden" id="JSVoting::ShowAllVotes" value="1"/>!);
			}
		}
</%perl>

		<script type="text/javascript" src="/scripts/jsvoting.js"></script>

% 	}

%# vi: set ts=4 sw=4 ft=mason :

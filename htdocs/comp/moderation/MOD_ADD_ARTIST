<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# This component provides the display facilities for
	# the MOD_ADD_ARTIST edit type.
	#
	# $URL$
	# $Id$
	#
</%perl>
<%method ShowPreviousValue>
% 	my $this = shift;
</%method>

<%method ShowNewValue>
<%perl>
	my $this = shift;
	my $new = $this->{'new_unpacked'};

	(my $name) = grep { defined } ($new->{'ArtistName'}, "[error]");
	(my $sortname) = grep { defined } ($new->{'SortName'}, "[error]");
	(my $id) = grep { defined } ($new->{'ArtistId'}, 0);
	my $resolution = $new->{'Resolution'};
	my $begin = $new->{'BeginDate'};
	my $end = $new->{'EndDate'};
	my $type = $new->{'Type'};
	my $type_str = Artist::GetTypeName($type);

	my $s = $this->GetStatus;
</%perl>

	<table class="editfields">
% 	if ($s == &ModDefs::STATUS_FAILEDVOTE or $s == &ModDefs::STATUS_FAILEDPREREQ) {

		<tr>
			<td class="lbl">Artist:</td>
			<td>
				<& /comp/linkartist, id => -1, name => $name, sortname => $sortname &></td>
		</tr>

% 	} else {

		<tr>
			<td class="lbl">Artist:</td>
			<td>
				<& /comp/linkartist, id => $id, name => $name,
					sortname => $sortname, resolution => $resolution &></td>
		</tr>
	</table>

%		my @misc = ();
%		push @misc, "Sortname: $sortname" if ($sortname ne $name);
%		push @misc, "Type: $type_str" if ($type);
%		push @misc, Artist::GetBeginDateName($type).": ".MusicBrainz::MakeDisplayDateStr($begin) if ($begin);
%		push @misc, Artist::GetEndDateName($type).": ".MusicBrainz::MakeDisplayDateStr($end) if ($end);
%		if (@misc)
%		{
%			my $list = join "###", @misc;
%			$list = $m->interp->apply_escapes($list, "h");
%			$list =~ s/###/<br\/>/g;

		<div class="attrlist">
			<% $list |n %>
		</div>

%		}
%	}


</%method>

%# eof

%# vi: set ts=4 sw=4 ft=mason :

<%method ShowPreviousValue>
% my $self = shift;
% my $prev = $self->{'prev_unpacked'};

% if (defined $prev->{'ArtistName'}) {
	Name:
   	<strong><% $prev->{'ArtistName'} %></strong>
% }

% if (defined $prev->{'SortName'}) {
	<br />
	Sortname:
   	<strong><% $prev->{'SortName'} %></strong>
% }

% if (defined $prev->{'Type'}) {
	<br />
	Type:
	<strong><% Artist::GetTypeName($prev->{'Type'}) %></strong>
% }

% if (defined $prev->{'Resolution'}) {
	<br />
	Resolution:
   	<strong><% $prev->{'Resolution'} %></strong>
% }

% if (defined $prev->{'BeginDate'}) {
	<br />
	Begin Date:
   	<strong><% MusicBrainz::MakeDisplayDateStr($prev->{'BeginDate'}) %></strong>
% }

% if (defined $prev->{'EndDate'}) {
	<br />
	End Date:
   	<strong><% MusicBrainz::MakeDisplayDateStr($prev->{'EndDate'}) %></strong>
% }
</%method>


<%method ShowNewValue>
% my $self = shift;
% my $new = $self->{'new_unpacked'};

% if (defined $new->{'ArtistName'}) {
	Name:
   	<strong><% $new->{'ArtistName'} %></strong>
% }

% if (defined $new->{'SortName'}) {
	<br />
	Sortname:
   	<strong><% $new->{'SortName'} %></strong>
% }

% if (defined $new->{'Type'}) {
	<br />
	Type:
	<strong><% Artist::GetTypeName($new->{'Type'}) or "(Unset)" %></strong>
% }

% if (exists $new->{'Resolution'}) {
	<br />
	Resolution:
%	if (defined $new->{'Resolution'} && $new->{'Resolution'} ne '') {
		<strong><% $new->{'Resolution'} %></strong>
%	} else {
		<em>(Unset)</em>
%	}
% }

% if (exists $new->{'BeginDate'}) {
	<br />
	Begin Date:
%	if ($new->{'BeginDate'}) {
		<strong><% MusicBrainz::MakeDisplayDateStr($new->{'BeginDate'}) %></strong>
%	} else {
		<em>(Unset)</em>
%	}
% }

% if (exists $new->{'EndDate'}) {
	<br />
	End Date:
%	if ($new->{'EndDate'}) {
		<strong><% MusicBrainz::MakeDisplayDateStr($new->{'EndDate'}) %></strong>
%	} else {
		<em>(Unset)</em>
%	}
% }
</%method>

%# eof

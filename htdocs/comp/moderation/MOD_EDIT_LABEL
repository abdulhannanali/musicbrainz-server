<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# This component provides the display facilities for
	# the MOD_EDIT_LABEL edit type.
	#
	# $Id$
	#
</%perl>
<%method ShowPreviousValue>
<%perl>

 	my $self = shift;
 	my $prev = $self->{'prev_unpacked'};
 	my $new = $self->{'new_unpacked'};
	my $id = $self->GetId;

	return;

</%perl>


	<table class="editdiff">

%	if ($prev->{'LabelName'} ne $new->{'LabelName'})
%	{

		<tr>
			<td class="lbl">Name:</td>
			<td class="diff" id="ov::artistname<% $id %>">
				<% $prev->{'LabelName'} %>
			</td>
		</tr>

%	}

%	if ($prev->{"LabelCode"} ne $new->{"LabelCode"})
%	{

		<tr>
			<td class="lbl">Label code:</td>
			<td class="diff" id="ov::labelcode<% $id %>">
				<% MusicBrainz::Server::Validation::MakeDisplayLabelCode($prev->{"LabelCode"}) %>
			</td>
		</tr>
%	}

%	if ($prev->{"Type"} ne $new->{"Type"})
%	{
%		my $type_str = MusicBrainz::Server::Label::GetTypeName($prev->{"Type"});

		<tr>
			<td class="lbl">Type:</td>
			<td class="diff" id="ov::artisttype<% $id %>">
				<% $type_str %>
			</td>
		</tr>

%	}

%	if ($prev->{"Resolution"} ne $new->{"Resolution"})
%	{

		<tr>
			<td class="lbl">Comment:</td>
			<td class="diff" id="ov::artistresolution<% $id %>">
				<% $prev->{"Resolution"} %>
			</td>
		</tr>

%	}

%	if ($prev->{"BeginDate"} ne $new->{"BeginDate"})
%	{
%		my $begin = MusicBrainz::Server::Validation::MakeDisplayDateStr($prev->{'BeginDate'});
%		$begin = "[Not&nbsp;set]" if ($begin eq "");
%		my $datestr = MusicBrainz::Server::Label::GetBeginDateName($prev->{"Type"});
%		$datestr =~ s/ /&nbsp;/g;

		<tr>
			<td class="lbl"><% $datestr |n %>:</td>
			<td class="diff" id="ov::artistbegindate<% $id %>">
				<% $begin |n %>
			</td>
		</tr>

%	}


%	if ($prev->{"EndDate"} ne $new->{"EndDate"})
%	{
%		my $end = MusicBrainz::Server::Validation::MakeDisplayDateStr($prev->{'EndDate'});
%		$end = "[Not&nbsp;set]" if ($end eq "");
%		my $datestr = MusicBrainz::Server::Label::GetEndDateName($prev->{"Type"});
%		$datestr =~ s/ /&nbsp;/g;

		<tr>
			<td class="lbl"><% $datestr |n %>:</td>
			<td class="diff" id="ov::artistenddate<% $id %>">
				<% $end |n %>
			</td>
		</tr>

%	}


	</table>

</%perl>
</%method>


<%method ShowNewValue>
<%perl>

 	my $self = shift;
 	my $prev = $self->{'prev_unpacked'};
 	my $new = $self->{'new_unpacked'};
	my $id = $self->GetId;

</%perl>

	<table class="editdiff">

%	if ($prev->{"LabelName"} ne $new->{"LabelName"})
%	{

		<tr class="top">
			<td class="lbl" rowspan="2">Name:</td>
			<td class="diff" id="ov::artistname<% $id %>">
				<% $prev->{'LabelName'} %>
			</td>
		</tr>
		<tr>
			<td class="diff" id="nv::artistname<% $id %>">
				<% $new->{"LabelName"} %>
			</td>
		</tr>

%	}

%	if ($prev->{"SortName"} ne $new->{"SortName"})
%	{
		<tr class="top">
			<td class="lbl" rowspan="2">Sort Name:</td>
			<td class="diff" id="ov::labelsortname<% $id %>">
				<% $prev->{'SortName'} %>
			</td>
		</tr>
		<tr>
			<td class="diff" id="nv::labelsortname<% $id %>">
				<% $new->{"SortName"} %>
			</td>
		</tr>
%	}

%	if ($prev->{"LabelCode"} ne $new->{"LabelCode"})
%	{

		<tr class="top">
			<td class="lbl" rowspan="2">Label Code:</td>
			<td class="diff" id="ov::labelcode<% $id %>">
				<% MusicBrainz::Server::Validation::MakeDisplayLabelCode($prev->{"LabelCode"}) %>
			</td>
		</tr>
		<tr>
			<td class="diff" id="nv::labelcode<% $id %>">
				<% MusicBrainz::Server::Validation::MakeDisplayLabelCode($new->{"LabelCode"}) %>
			</td>
		</tr>

%	}

%	if ($prev->{"Country"} ne $new->{"Country"})
%	{
%		my $c1 = '?';
%		my $c2 = '?';
%		my $country_obj = MusicBrainz::Server::Country->new($self->{DBH});
%		$c1 = $country_obj->newFromId($prev->{"Country"})->GetName if $prev->{"Country"};
%		$c2 = $country_obj->newFromId($new->{"Country"})->GetName if $new->{"Country"};
		<tr class="top">
			<td class="lbl" rowspan="2">Country:</td>
			<td class="diff" id="ov::country<% $id %>">
				<% $c1 %>
			</td>
		</tr>
		<tr>
			<td class="diff" id="nv::country<% $id %>">
				<% $c2 %>
			</td>
		</tr>
%	}

%	if ($prev->{"Type"} ne $new->{"Type"})
%	{
%		my $prevtype = MusicBrainz::Server::Label::GetTypeName($prev->{"Type"});
%		my $newtype = MusicBrainz::Server::Label::GetTypeName($new->{"Type"}) || "?";

		<tr class="top">
			<td class="lbl" rowspan="2">Type:</td>
			<td class="diff" id="ov::artisttype<% $id %>">
				<% $prevtype |n %>
			</td>
		</tr>
		<tr>
			<td class="diff" id="nv::artisttype<% $id %>">
				<% $newtype |n %>
			</td>
		</tr>

%	}

%	if ($prev->{"Resolution"} ne $new->{"Resolution"})
%	{
%		my $resolution = $new->{"Resolution"};
%		$resolution = (defined $resolution and $resolution ne "" ? $resolution : "[Not&nbsp;set]");

		<tr class="top">
			<td class="lbl" rowspan="2">Comment:</td>
			<td class="diff" id="ov::artistresolution<% $id %>">
				<% $prev->{'Resolution'} %>
			</td>
		</tr>
		<tr>
			<td class="diff" id="nv::artistresolution<% $id %>">
				<% $resolution |n %>
			</td>
		</tr>

%	}

<%perl>

	if ($prev->{"BeginDate"} ne $new->{"BeginDate"})
	{
		my $prevbegin = MusicBrainz::Server::Validation::MakeDisplayDateStr($prev->{'BeginDate'});
		$prevbegin = "?" if ($prevbegin eq "");

		my $newbegin = $new->{"BeginDate"};
		$newbegin = $newbegin ? MusicBrainz::Server::Validation::MakeDisplayDateStr($newbegin) : "?";

</%perl>

		<tr class="top">
			<td class="lbl" rowspan="2">Begin:</td>
			<td class="diff" id="ov::artistbegindate<% $id %>">
				<% $prevbegin |n %>
			</td>
		</tr>
		<tr>
			<td class="diff" id="nv::artistbegindate<% $id %>">
				<% $newbegin |n %>
			</td>
		</tr>

%	}

<%perl>

	if ($prev->{"EndDate"} ne $new->{"EndDate"})
	{
		my $prevend = MusicBrainz::Server::Validation::MakeDisplayDateStr($prev->{'EndDate'});
		$prevend = "?" if ($prevend eq "");

		my $newend = $new->{"EndDate"};
		$newend = $newend ? MusicBrainz::Server::Validation::MakeDisplayDateStr($newend) : "?";

</%perl>

		<tr class="top">
			<td class="lbl" rowspan="2">End:</td>
			<td class="diff" id="ov::artistenddate<% $id %>">
				<% $prevend |n %>
			</td>
		</tr>
		<tr>
			<td class="diff" id="nv::artistenddate<% $id %>">
				<% $newend |n %>
			</td>
		</tr>

%	}

	</table>

</%perl>
</%method>

%# vi: set ts=4 sw=4 ft=mason :

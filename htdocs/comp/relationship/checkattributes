<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Extracts the list of attributes of a relationship type and verifies
	# if the corresponding entries in the ARGS hash (the submitted form)
	# are in a valid state. (min/max attributes, required). returns a list
	# of errors, or the list of the verified attributes.
	#
	# $Id$
	#
</%perl>
<%perl>

	my $attributes = $ARGS{"v::attributes"};
	my $attrType = $ARGS{"v::attrType"};
	my (@errors, @new_attr_list);

	for my $kvpair (split " ", $attributes)
	{
		my ($name, $limits) = split '=', $kvpair;
		my ($mn, $mx) = split '-', $limits;

		$mn = 0 if (!defined $mn or $mn eq '');
		$mx = 10000 if (!defined $mx or $mx eq '');

		my $total = 0;
		for(my $index = 0; $index < $mx; $index++)
		{
			# First, check to see if we have a passed arg
			last if (!exists $ARGS{"attr_".$name."_".$index});
			my $value = $ARGS{"attr_".$name."_".$index};
			if ($value)
			{
				if ($value < 0)
				{
					my $lookupAttr = $attrType->newFromParentIdAndChildName(0, $name);
					$value = ($lookupAttr) ?  $lookupAttr->GetId() : 0;
				}
				$total++;
				push @new_attr_list, { value => $value, name => $name }
			}
		}

		if ($total > $mx)
		{
			# This should never happen
			push @errors, "Too many selections made for attribute $name";
		}
		elsif ($total == 0 && $mn == 1)
		{
			push @errors, "No selection made for required attribute $name";
		}
		elsif ($total < $mn)
		{
			push @errors, "Too few selections for attribute $name";
		}
	}

	$ARGS{"v::errors"} = \@errors;
	$ARGS{"v::new_attr_list"} = \@new_attr_list;

	return %ARGS;

</%perl>
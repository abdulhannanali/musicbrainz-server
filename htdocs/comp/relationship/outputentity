<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Renders a relationship entity. If there is a pending edit on this
	# relationship, the output is highlighted using the "mp" css class.
	#
	# $Id$
	#
</%perl>
<%args>

	$item
	$index
	$name

</%args>
<%perl>

	my $prefix = "link" . $index . "_";
	my $mp = $item->{modpending};

	my $e_id = $item->{$prefix . "id"};
	my $e_name = $item->{$prefix . "name"} eq "" ? $name : $item->{$prefix . "name"};
	my $e_type = $item->{$prefix . "type"};
	my $e_inttype = ($e_type eq "album" ? "release" : $e_type);

	my $url = $item->{$prefix . "name"};
	my $title = undef;
	my $strong = 0;

	$m->out(qq!<span class="mp">!) if ($mp);

	if ($e_inttype eq "artist" or
		$e_inttype eq "release" or
		$e_inttype eq "track")
	{
		$m->comp("/comp/link$e_inttype", id => $e_id, name => $e_name);
	}
	elsif ($e_type eq "url")
	{
		my $name = $url;
	
		if ($item->{"link_name"} eq "amazon asin" && $prefix eq "link1_")
		{
			my ($asin, $coverart) = Album->ParseAmazonURL($item->{link1_name});
			if ($asin ne "")
			{
			    my $store = Album->GetCoverartStore($coverart);
			    $url = sprintf(qq!/misc/redirects/amazon-album-info.html?store=%s&amp;asin=%s!, $store, $asin);
			    $name = $asin;
			    $strong = 1;
			    $title = sprintf("Amazon page for ASIN %s on %s", $asin, $store);
			}
		}
		else
		{
			if ($item->{"link_name"} eq "wikipedia" && $prefix eq "link1_")
			{
				$name =~ s/^http:\/\/(\w{2,})\.wikipedia\.org\/wiki\/(.*)$/$1: $2/o;
				$name =~ tr/_/ /;
			}

			# decode the URL
			use Encode;
			my $decoded_name = $name;
			$decoded_name =~ s/\%([\dA-Fa-f]{2})/pack('C', hex($1))/oeg;
			eval { Encode::decode_utf8($decoded_name, Encode::FB_CROAK); };
			$name = $decoded_name if !$@;
		}

		$m->comp("/comp/linkurl", id => $e_id, name => $name, href => $url, strong => $strong, title => $title);
	}

	$m->out("</span>") if ($mp);

</%perl>

<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Render the title, editing links and if available the amazon coverart
	# of a release.
	#
	# $Id$
	#
</%perl>
<%args>

	$artist
	$album
	$release => undef

	$showlinks => 1
	$showeditlinks => 1

	$showtrackartists => $session{"showtrackartists"}
	$showtrackartiststoggle => 0

	$showrelationships => $session{"showrelationships"}
	$showrelationshipstoggle => 0

	$link => ""
	$linktype => ""

	$showtag => 0
	$tagchecked => 0

</%args>
<%perl>

	$release ||= $album;

	my $artistid = $release->GetArtist;
	my $releaseid = $release->GetId;
	my $mbid = $release->GetMBId;
	my $name = $release->GetName;
	my $nonalbum = $release->IsNonAlbumTracks;
	my $exists = MusicBrainz::Server::Validation::IsNonNegInteger($release->GetId) && $release->GetId;
	my $quality = ModDefs::GetQualityText($release->GetQuality);

</%perl>

	<table id="release::<% $releaseid %>" class="releasebegin">
		<tr class="title<% $release->GetModPending ? " mp" : "" %>"><%perl>

	if ($link)
	{
		my $_title = ($linktype eq "expand" ? "expanded" : "collapsed");
		my $_img = ($linktype eq "expand" ? "/images/plus.gif" : "/images/minus.gif");
		my $_alt = ($linktype eq "expand" ? "Expand" : "Collapse");

		$m->out(qq!<td class="icon">!);
		$m->out(sprintf
				qq!<a href="%s" title="%s"><img src="%s" align="middle" border="0" alt="%s" /></a></td>!,
				$link, $_title, $_img, $_alt);
		$m->out(qq!</td>!);
	}

</%perl>
			<td class="toggle" style="display: none"></td>
			<td class="title">

%	# if the release has a rowid, show name as link, else text-only.
%	if ($exists)
%	{
				<a href="/release/<% $mbid %>.html" id="link::<% $releaseid %>" title="<% $name %>"><% $name %></a>

%	}
%	else
%	{
				<span><% $release->GetName %></span>

%	}

			</td>

%	if ($session{tport})
%	{

			<td class="tagger">
				<a href="http://127.0.0.1:<% $session{tport} %>/openalbum?id=<% $release->GetMBId %>&amp;t=<% time %>"
					target="hiddeniframe" title="Open in tagger"><img
					align="absmiddle" src="/images/mblookup-tagger.png"
					alt="Open in tagger" /></a></td>
%	}

    <td class="quality">quality:&nbsp;<% $quality %></td>

%	if ($session{"uid"} && !$nonalbum && $showtag)
%	{
			<td class="batchop">
				<input type="checkbox" name="releaseid<% $releaseid %>" <% $tagchecked ? 'checked="checked"' : "" |n %>" />
			</td>
%	}
		</tr>
	</table>

<%perl>

 	# release link rows.
 	if ($showlinks or $showeditlinks)
	{
		$m->out(qq!<table id="releaselinks::$releaseid" class="releaselinks"><tr>!);
		$m->out(qq!<td class="links">!);
		$m->out(qq!<table class="inner">!);

		# non-editing links
 		if ($showlinks)
		{
			$m->out(qq!<tr><td class="info">!);
			$m->out(qq!Release: [ !);
			$m->out(qq!   <a href="/show/permlink.html?id=$mbid&amp;type=release" title="Link to this release">Link to this</a>!);
			$m->out(qq! | <a href="/show/release/details.html?releaseid=$releaseid">Details</a>!);

			# only show the track artists toggle function if the page using the /comp/album
			# parameter handles the arguments
			if ($showtrackartiststoggle && !$release->HasMultipleTrackArtists && !$nonalbum)
			{
				my $newtext = ($showtrackartists ? "Hide" : "Show")."&nbsp;artists";
				my $newvalue = ($showtrackartists ? 0 : 1);
				$m->out(qq! | <a href="/show/release/?releaseid=$releaseid&amp;showtrackartists=$newvalue">$newtext</a>!);
			}

			# only show the track relationships toggle function if the page using the /comp/album
			# parameter handles the arguments
			if ($showrelationshipstoggle)
			{
				my $newtext = ($showrelationships ? "Hide" : "Show")."&nbsp;relationships";
				my $newvalue = ($showrelationships ? 0 : 1);
				$m->out(qq! | <a href="/show/release/?releaseid=$releaseid&amp;showrelationships=$newvalue">$newtext</a>!);
			}
			
			$m->out(qq! | !);
			$m->comp("/comp/googlelink", search => [ $artist->GetName, $name ], text => "Search google");

 			if ($session{"uid"} and !$nonalbum)
 			{
				$m->out(qq! | <a href="/mod/search/pre/album.html?releaseid=$releaseid">View release edits</a>!);
 			}
			$m->out(qq! ] </td></tr>!);
 		}


		my $editlinkprereq = ($session{uid} and $showeditlinks and $exists);

		# annotation links
 		if ($editlinkprereq and UserPreference::get("release_show_annotationlinks"))
 		{
 			my $mb = $m->comp("/comp/dblogin");

			# load the annotation from the database
			my $annotation = MusicBrainz::Server::Annotation->new($mb->{DBH});
			$annotation->SetAlbum($releaseid);
			$annotation->GetLatestAnnotation() or $annotation = undef;

			$m->out(qq!<tr><td class="editannotation">!);
			$m->out(qq!Annotation: [ !);

			if ($annotation)
			{
				$m->out(sprintf qq!<a href="/edit/annotation/album/history.html?albumid=%d&amp;expand_all=1">Show history</a> | !,
								$release->GetId);
				$m->comp("/edit/annotation/edit-link", annotation => $annotation);
			}
			else
			{
				$m->out("This release does not yet have an annotation. ");
				$m->out(sprintf qq!<a href="/edit/annotation/album/edit.html?albumid=%d">Add an annotation &raquo;</a>!,
								$release->GetId);
			}
			$m->out(qq! ]</td></tr>!);
		}

		# relationship links
 		if ($editlinkprereq and UserPreference::get("release_show_relationshipslinks") and !$nonalbum)
 		{
			$m->out(qq!<tr><td class="editrelationships">!);
			$m->out(qq!Relationships: !);
			$m->comp("/comp/ar/ShowARLinks", id => $releaseid, type => "album", name => $release->GetName, short => 1);
			$m->out(qq!</td></tr>!);
		}

		# editing links
 		if ($showeditlinks)
		{
			$m->out(qq!<tr><td class="edit"> Edit: [ !);
			if ($session{uid})
			{
				if ($nonalbum)
				{
					$m->out(qq!<a href="/edit/track/addnonalbum.html?artistid=$artistid">Add&nbsp;a&nbsp;non-album&nbsp;track</a>!);
				}
				else
				{
					$m->out(qq!<a href="/edit/album/edit.html?releaseid=$releaseid">Edit title</a> | !);
					$m->out(qq!<a href="/edit/album/editall.html?releaseid=$releaseid">Edit all</a>!);
					if ($release->CanAddTrack)
					{
						$m->out(qq! | <a href="/edit/track/add.html?releaseid=$releaseid">Add&nbsp;track</a>!);
					}
					$m->out(qq! | <a href="/edit/relationship/showelements.html?type=album&amp;id=$releaseid&amp;name=!.uri_escape($name).qq!">Add Relationship</a>!);
					$m->out(qq! | <a href="/edit/album/move.html?releaseid=$releaseid">Move</a>!);
					if (!$release->HasMultipleTrackArtists)
					{
						$m->out(qq! | <a href="/edit/album/mac.html?releaseid=$releaseid">Convert&nbsp;to&nbsp;multiple&nbsp;artists</a>!);
					}
					else
					{
						$m->out(qq! | <a href="/edit/album/sac.html?releaseid=$releaseid">Convert&nbsp;to&nbsp;single&nbsp;artist</a>!);
					}
					$m->out(qq! | <a href="/edit/albumbatch/done.html?releaseid$releaseid=on">Merge</a>!);
				}
				$m->out(qq! | <a href="/edit/album/remove.html?releaseid=$releaseid">Remove</a>!);
				$m->out(qq! | <a href="/edit/albumquality/edit.html?id=$releaseid">Change quality</a>!);
			}
			else
			{
				$m->out(qq!<a href="/login.html">Log in</a> to edit this!);
 			}
			$m->out(qq!&nbsp;]</td></tr>!);
		}
		$m->out(qq!</table>!);
		$m->out(qq!</td>!);

		my ($coverart, $store);
		my $asin = $release->GetAsin();
		if ($asin)
		{
			$coverart = $release->GetCoverartURL();
			$store = UserPreference::get("use_amazon_store");

			# if there is no store preference, use the same store as given in the coverart url
			if (!($store =~ /^amazon/))
			{
				$store = $album->GetCoverartStore($coverart);
			}
		}
		if ($coverart && $showlinks && UserPreference::get("show_amazon_coverart"))
		{
			$m->out(qq!<td class="cover"><a href="/misc/redirects/amazon-album-info.html?!);
			$m->out(sprintf qq!%s&amp;store=%s&amp;asin=%s">!,
				$release->GetMBId,
				$store,
				$asin);
			$m->out(sprintf qq!<img class="asin" src="%s" alt="Show release at amazon" /></a>!,
				$coverart);

			$m->out(qq!<div class="partnerlinks">!);
			$m->out(qq!Amazon: <a href="/misc/redirects/amazon-album-info.html?!);
			$m->out(sprintf qq!%s&amp;store=%s&amp;asin=%s">info</a>!,
				$release->GetMBId,
				$store,
				$asin);
			$m->out(" | ");
			$m->out(qq!<a href="/misc/redirects/amazon-album-buy.html?!);
			$m->out(sprintf qq!%s&amp;store=%s&amp;asin=%s">buy</a>!,
				$release->GetMBId,
				$store,
				$asin);
			$m->out(qq!</div></td>!);
		}
		$m->out(qq!</tr>!);
		$m->out(qq!</table>!);
	}

</%perl>

	<table id="tracks::<% $releaseid %>" class="releasetracks">

%# vi: set ts=4 sw=4 ft=mason :

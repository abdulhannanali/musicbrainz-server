<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Render the Disc IDs, and Release Events of a release
	#
	# $URL$
	# $Id$
	#
</%perl>
<%args>
	$artist
	$album

	$showids => 1
	$showreleases => 0
	$showmodlinks => 1
	$showtrackartists => 0
</%args>
<%perl>
	my $release = $album;
	my $isva = $release->HasMultipleTrackArtists || $showtrackartists;

	if ($showids)
	{
		my @ids = @{ $release->GetDiscIDs };

		if (scalar(@ids) > 0)
		{

			foreach my $id (@ids)
			{
				my $cdtoc = $id->GetCDTOC;
				my $duration = Track::FormatTrackLength($cdtoc->GetLeadoutOffset / 75 * 1000);
				my $id_numtracks = $cdtoc->GetTrackCount;
				my $discid = $cdtoc->GetDiscID;
				my $mismatch = (defined $id_numtracks and
							 	$id_numtracks != $release->GetTrackCount);

				# 1. TOC
				my $colspan = ($isva ? 3 : 2);
				$m->out(sprintf qq!<tr class="discid %s">!, $id->GetModPending ? " mp" : "");
				$m->out(qq!<td class="toc" colspan="$colspan">Disc ID: !);

				# print a warning if the toc has different number of tracks
				# than the release.
				$m->out(qq!<span class="mismatch">!) if ($mismatch);
				$m->out("<a href='/showcdtoc.html?id=".$cdtoc->GetId."'>$discid</a>");
				$m->out(qq!</span><br>This id belongs to a release that has $id_numtracks tracks.!) if ($mismatch);
				$m->out("</td>");

				# 2. Length
				$m->out(qq!<td class="length">$duration</td>!);

				# 3. Edit Links
				if ($session{uid} and $showmodlinks)
				{
					$m->out(qq!<td class="links">!);
					$m->out(sprintf qq!<a href="/edit/discid/move.html?tocid=%s&amp;albumid=%s" title="%s">Edit</a>!,
									$cdtoc->GetId,
									$release->GetId(),
									"Move Disc ID to another release");
					$m->out(sprintf qq! | <a href="/edit/discid/remove.html?tocid=%s&amp;albumid=%s" title="%s">Rem</a>!,
									$cdtoc->GetId(),
									$release->GetId(),
									"Remove this Disc ID from the Release");
					$m->out("</td>\n");
				}
				$m->out("</tr>");
			}
		}
	}
	$m->out("</table>");


	if ($showreleases and not $release->IsNonAlbumTracks)
	{
		my $releaseid = $release->GetId;
		$m->out(qq!<table id="releaseevents::$releaseid" class="releaseevents">!);
		$m->out(qq!<tr>!);
		$m->out(qq!<td class="eventslist">!);

		my @relevents = $release->Releases;
		if (@relevents == 0)
		{
			$m->out("No release events");
		}
		else
		{
			my %country_names;
			my $country_obj = MusicBrainz::Server::Country->new($release->{DBH});

			$m->out(qq!<table class="eventslist">!);
			my $first = 1;
			for my $rel (@relevents)
			{
				# Country
				my $cid = $rel->GetCountry;
				my $name = (
					$country_names{$cid} ||= do {
						my $c = $country_obj->newFromId($cid);
						$c ? $c->GetName : "?";
					}
				);

				$m->out(sprintf qq!<tr%s>!, $rel->GetModPending ? qq! class="mp"! : "");
				$m->out(sprintf qq!<td>%s</td>!, $m->scomp("/comp/releasedate", $rel));
				$m->out(qq!<td>&mdash;</td>!);
				$m->out(sprintf qq!<td>%s</td>!, encode_entities($name));

				$m->out("</tr>");
			}
			$m->out("</table>");
		}
		$m->out("</td>");

		if ($showmodlinks)
		{
			$m->out(qq!<td class="links">!);
			$m->out(sprintf qq!<a href="/edit/albumreleases/index.html?releaseid=%s" title="%s">Edit Release Events</a>!,
							$release->GetId(),
							"Add, Edit and Remove Release Events of this Release");
			$m->out("</td>");
		}
		$m->out("</tr>");
		$m->out("</table>");
	}

	# add some spacing after the release.
	$m->out(qq!<div class="release_endspacer">&nbsp;</div>!);

</%perl>


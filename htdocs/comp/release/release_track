<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Render a track of a release
	#
	# $Id$
	#
</%perl>
<%args>

	$mb
	$artist
	$album
	$track
	$tindex

	$highlight
	$highlightonly => 0

	$showmodlinks
	$showtrackartists => 0

	$trmcount => 0
	$puidcount => 0
	$mbtagger => $session{'mbt'}

</%args>
<%perl>

	# track artist are either shown, if there are track artists != release artist
	# or if the link "show track artists" was clicked.
	my $isva = $album->HasMultipleTrackArtists || $showtrackartists;

	# non-album tracks do not show a tracknumber
	# and the tracks title has to span 2 cells, because of that.
	my $nonalbum = $album->IsNonAlbumTracks;
	my $colspan = ($nonalbum ? 'colspan="2"' : '');

	# start TR
	$m->out(sprintf qq!<tr class="track%s">\n!,
					($highlight and !$highlightonly ? " highlight" : ""));

	# 1. track number
 	unless ($nonalbum)
	{
		# Track Number field is modpending if the modpending flag is
		# raised on the AlbumJoin table.
    	$m->out(sprintf qq!<td class="no%s">%s!,
    					$track->GetAlbumJoinModPending ? " modpending" : "",
    					$track->GetSequence);

		# Accessibility: Removed the asterix (*) signs, uses bold font for
		# highlighting as well as colour.
		# $m->out(($hl ? "**" : "") . $track->GetSequence . ($hl ? "**" : ""));
		$m->out("</td>\n");
	}

	# 2. track title
	$m->out(sprintf qq!<td class="title%s" %s>\n!,
					($track->GetModPending ? " mp" : "")
				   .($isva ? " va" : ""),
					$nonalbum ? qq!colspan="2"! : "");


	# the windows-tagger works track based, show the tagger icon.
	if ($mbtagger && $showmodlinks and $track->GetId)
	{
		$m->out(qq!<a href="tag:$track->GetMBId():$album->GetMBId()">!);
		$m->out(qq!<img src="/images/mblookup-tag.gif" alt="Tag" title="Tag the current track" !);
		$m->out(qq!height="13" width="28" border="0" /></a>!);
	}

	# if the track has a rowid, show track name as link, else text-only.
	if ($track->GetId)
	{
		$m->out(sprintf qq!<a href="/track/%s.html" title="">%s</a>!,
						$track->GetMBId,
						encode_entities($track->GetName));
	}
	else
	{
		$m->out(sprintf qq!%s!,
						encode_entities($track->GetName));
	}

	# render PUID/TRM ID icons
	if ($puidcount > 0)
	{
		$m->out(qq!&nbsp;<img src="/images/puid.gif" alt="PUID" width="35" height="13" title="$puidcount PUIDs" />&nbsp;!);
	}
	if ($trmcount > 0)
	{
       $m->out(qq!&nbsp;<img src="/images/trm.gif" alt="TRM" width="30" height="11" title="$trmcount TRM IDs" />&nbsp;!);
	}

	if ($track->GetId)
	{
		$m->comp("/comp/release/track_relationships", mb => $mb, track => $track, showmodlinks => $showmodlinks);
	}

	$m->out("</td>\n");


	# 3. track artist
	if ($isva)
	{
		$m->out(qq!<td class="artist">!);

		if ($track->GetArtist)
		{
			my $artist = $m->comp("/comp/loadartist", $mb, $track->GetArtist);
	       	$m->comp("/comp/linkartist", artist => $artist, strong => 0, icon => 0);

			if (exists $session{user} and $showmodlinks)
			{
				$m->out(sprintf qq! (<a href="/edit/track/change.html?releaseid=%s&amp;tindex=%s&amp;solo=1">Change</a>)!,
								$album->GetId(),
								$tindex);
			}
		}
		else
		{
			$m->comp("/comp/linkartist", id => $track->GetArtist, name => $track->GetArtistName, strong => 0, icon => 0);
		}

		$m->out("</td>\n");
	}

	# 4. length
	my $tracklen = Track::FormatTrackLength($track->GetLength);
	$m->out(sprintf qq!<td class="length%s">!, ($track->GetModPending ? " mp" : ""));
	$m->out(length($tracklen)==4 ? "&nbsp;" : "");
	$m->out($tracklen);
	$m->out("</td>\n");

	# 5. links
	if ($session{uid} and $showmodlinks)
	{
		$m->out(qq!<td class="links">!);
       	$m->out(sprintf qq!<a href="/edit/track/edit.html?releaseid=%s&amp;trackid=%s" title="%s">Edit</a>!,
				       	$album->GetId(),
				       	$track->GetId(),
				       	"Edit Track Name, Number and Length");
		if ($album->CanRemoveTrack($track->GetSequence))
		{
			$m->out(sprintf qq! | <a href="/edit/track/remove.html?releaseid=%s&amp;trackid=%s" title="%s">Remove</a>!,
							$album->GetId(),
							$track->GetId(),
							"Remove this Track from the Release");
		}
		else
		{
			$m->out(sprintf qq! | <acronym title="%s">Remove</acronym>!,
							"Tracks cannot be removed from this Release because of attached Disc IDs");
		}
		$m->out("</td>\n");
	}
	$m->out("</tr>\n");

</%perl>

%# vi: set ts=4 sw=4 ft=mason :
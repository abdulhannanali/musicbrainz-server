<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Renders the relationships of a track.
	#
	# $URL$
	# $Id$
	#
</%perl>
<%args>

	$mb
	$track
	$showmodlinks

</%args>
<%perl>

	my $id = $track->GetId;
	my $name => $track->GetName;
	my $type = "track";
	my $isrelpage = 0;
	my $expanded = 0;

	my $relationships = $m->comp("/comp/loadrelationships", $mb, $id, $type);
	my @links = @{ $relationships };

	# output relationships.
	if (@links != 0)
	{
		my $max = scalar(@links);
		my ($item, $i, $count, $lines);

		$m->out('<table class="relationships">');
		for($i = 0, $count = 0, $lines = 0; $i < $max; $i++, $lines++)
		{
			my $itemsperline = 0;
			if ($lines >= 3 && !$isrelpage)
			{
				$m->out(qq!<tr><td colspan="3">!);
				$m->out(($max - $count) . " relationships not shown. ");
				$m->out(qq!<a href="/show/track/relationships.html?trackid=$id">View all relationships ...</a></td></tr>!);
				last;
			}
			$item = $links[$i];

			# remove un-necessary words from phrase
			my $phrase = $item->{link_phrase};
			#$phrase =~ s/^[ \t]*//;
			#$phrase =~ s/^has|^was|^were//g;

			$m->out('<tr><td class="small">'.$phrase. ' ');
			$m->comp("/comp/relationship/outputentity", item => $item, index => 1, name => $name);
			$count++;

			if (!$expanded)
			{
				for(my $j = $i + 1; $j < $max; $j++)
				{
					my $nextitem = $links[$j];
					if ($m->comp("/comp/relationship/isequal", $item, $nextitem))
					{
						if ($itemsperline <= 4 || $isrelpage)
						{
							my $and = 1;
							if ($j < $max - 1)
							{
								my $nextnextitem = $links[$j + 1];
								$and = 0 if ($m->comp("/comp/relationship/isequal", $nextitem, $nextnextitem));
							}
							$and ? $m->out(' and ') : $m->out(', ');
							$m->comp("/comp/relationship/outputentity", item => $nextitem, index => 1, name => $name);
							$m->out(" ... ") if ($itemsperline == 4);
							$itemsperline++;
						}
						$i = $j;
						$count++;
					}
				}
			}

			if ($item->{begindate} =~ /\S/ || $item->{enddate} =~ /\S/)
			{
				my ($begindate, $has_begindate) = ($item->{begindate}, $item->{begindate} =~ /\S/);
				my ($enddate, $has_enddate) = ($item->{enddate}, $item->{enddate} =~ /\S/);

				if ($has_begindate && $has_enddate && $begindate eq $enddate)
				{
					# if we have a full date, including day, use "on", else
					# use range "during/in"
					$m->out($begindate =~ /\d+-\d+-\d+/ ? " on " : " during/in ");
					$m->out($begindate);
				}
				else
				{
					$m->out(" from $begindate") if ($has_begindate);
					$m->out($has_enddate ? " until $enddate" : " to present");
				}
			}
			$m->out('</span>')
				if ($max == 1 && $item->{modpending});

			if ($session{uid} && $showmodlinks && $expanded)
			{
				$m->out('</td><td align="right" valign="top">');
				$m->out('<nobr> [ <a href="/edit/relationship/remove.html?type=' . $item->{link0_type} . '-' .
						$item->{link1_type} . '&amp;id='.$item->{link_id}.'">Del</a> ');
				$m->out('| <a href="/edit/relationship/edit.html?type=' . $item->{link0_type} . '-' .
						$item->{link1_type} . '&amp;id='.$item->{link_id}.'">Edit</a> ] </nobr>');
			}
			$m->out('</td></tr>');
		}
		$m->out('</table>');
	}
</%perl>

%# vi: set ts=4 sw=4 ft=mason :
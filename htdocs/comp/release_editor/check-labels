<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Check if all the labels have been set correctly. For all the missing
	# present the labelfilter such that the user can choose the label.
	#
	# $Id$
	#
</%perl>
<%args>

	$mb

</%args>
<%perl>

	$ARGS{"v::checkedlabels"} = 0;

	my @missing_labels;

	my $label = MusicBrainz::Server::Label->new($mb->{DBH});
	my @items = sort map { /^rev_label-(\d+)$/ ? ($1) : () } keys %ARGS;
	for my $j (@items)
	{
		my $labelid = $ARGS{"rev_label-$j"};
		my $labelname = $ARGS{"rev_labelname-$j"};
		my $labelorigname = $ARGS{"rev_labelorigname-$j"};

		if ($ARGS{"rev_clear-$j"}) {
			next;
		}

		if (!$labelname) {
			$ARGS{"rev_label-$j"} = '';
			next;
		}

		if (!$labelid || $labelname ne $labelorigname)
		{
			my @labels = @{ $label->GetLabelsFromName($labelname) };
			if (@labels == 1 and $labels[0]->GetName eq $labelname)
			{
				$ARGS{"rev_label-$j"} = $labels[0]->GetId;
			}
			else
			{
				push @missing_labels, $j;
			}
		}
	}

	if (!@missing_labels)
	{
		$ARGS{"v::checkedlabels"} = 1;
		return %ARGS;
	}

	my $j = $missing_labels[0];
	my $labelname = $ARGS{"rev_labelname-$j"};
	my $search = $ARGS{"labelfilter_search"} || $labelname;

</%perl>

<form method="post" action="<% $ARGS{"v::action"} %>" >

%	# delete the current tr{t}_artistname from the arguments,
%	# this will be the new query string.
%	my %args = $m->comp("/comp/form/args-strip-editsuitefields", %ARGS);
%	delete $args{"submitvalue"};

%	$m->comp("/comp/args-to-hidden-fields.inc", %args);

	<& /comp/tablebegin, title => "Select label for release event" &>

		<table class="formstyle">

			<tr>
				<td class="label">Track:</td>
				<td>
			</tr>

			<& /comp/labelfilter,

				search => $search,
				searchfieldname => "labelfilter_search",

				# which field we're currently selecting.
				# if the new artist is set, we'll set the
				# field corresponding to artistfilter_field with
				# the new value.
				labelfilter_selectedfield => "labelfilter_newlabelid",
				labelfilter_field => "rev_label-$j", # release:artistid / track: tr0_artistid

				# button values which drive the form handling
				# in the page using this component.
				cancelbutton => $ARGS{"SUBMIT_BACKTOFORM"},
				addlabelbutton => $ARGS{"SUBMIT_ADDLABEL"},

				selectbutton => $ARGS{"SUBMIT_LABEL_SELECT"},
				searchbutton => $ARGS{"SUBMIT_LABEL_SEARCH"},
				searchagainbutton => $ARGS{"SUBMIT_LABEL_SEARCH"},

				submitvalue => $ARGS{"submitvalue"},

			&>

		</table>

%		# add hidden field to allow selection dblclick
%		# handler on radiobutton to submit a submitvalue
%		# -- value of the select button is not transmitted in this case.
		<& /comp/form/hiddenfield, "submitvalue", $ARGS{"SUBMIT_LABEL_SELECT"} &>

	<& /comp/tableend &>

</form>

<%perl>

	$ARGS{"v::validate"} = 0;
	$ARGS{"v::showform"} = 0;
	return %ARGS;

</%perl>

%# vi: set ts=4 sw=4 ft=mason :

<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Check if the release should be converted to SingleArtist or
	# MultipleArtistRelease.
	#
	# $Id$
	#
</%perl>
<%args>

	$tracks
	$hasmultipletrackartists

</%args>
<%init>

	my %h;

	# Modify the force_macsac flag if the ignore button
	# was pressed.
	$ARGS{"force_macsac"} = 0
		if (not defined $ARGS{"force_macsac"}
			or $ARGS{"force_macsac"} eq "");

	# catch event that user wants to ignore the mac/sac
	# warning. continue validation.
	if ($ARGS{"submitvalue"} eq $ARGS{"SUBMIT_IGNOREMACSAC"})
	{
		$ARGS{"submitvalue"} = $ARGS{"SUBMIT_NEXT"};
		$ARGS{"force_macsac"} = 1
	}
	else
	{

		# We're looking for two separate errors here:
		# releases being entered as a single artist, but which should be
		# Various Artists.  We detect this by looking for "-" or "/" in
		# every track name.
		# releases being entered as Various Artists, but which should be
		# a single artist.  We detect this by seeing if all the artist names
		# are the same.
		if ($hasmultipletrackartists)
		{
			my %names;
			my %ids;
			++$names{ $ARGS{"artistname"} }
				if $ARGS{"artistname"} ne "";
			++$ids{ $ARGS{"artistid"} }
				if $ARGS{"artistid"} ne "";

			for my $i (0 .. $tracks-1)
			{
				++$names{ $ARGS{sprintf "tr%d_artistname", $i} }
					if $ARGS{sprintf "tr%d_artistname", $i} ne "";
				++$ids{ $ARGS{sprintf "tr%d_artistid", $i} }
					if $ARGS{sprintf "tr%d_artistid", $i} ne "";
			}
			$h{"sac"} = 1
				if keys(%names) == 1 and keys(%ids) == 1;
		}
		else
		{
			# check if should be entered as va-release
			my @names = map { $ARGS{"track$_"} } 0 .. $tracks-1;

			if ((grep /-/, @names) == $tracks
				or (grep /\//, @names) == $tracks)
			{
				$h{"mac"} = 1;
			}
		}
	}

	# put the encountered problems into the Arguments hash.
	$ARGS{"v::macsac"} = \%h;
	$ARGS{"v::checkedmacsac"} = (keys %h == 0 or $ARGS{"force_macsac"});

	return %ARGS;

</%init>

%# vi: set ts=4 sw=4 ft=mason :
<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# TODO: check the relationships that were entered.
	#
	# $Id$
	#
</%perl>
<%args>

	$tracks

</%args>
<%init>

	# -------------------------------------------------------------------------
	# ADVANCED RELATIONSHIPS
	# -------------------------------------------------------------------------
	my @trackrel = sort map { /^tr${i}_rel(\d+)_typeid$/ ? ($1) : () } keys %ARGS;

	# list the existing attributes
	for my $j (@trackrel)
	{
		# relationship details
		my $nodeid = $ARGS{sprintf "tr%d_rel%d_nodeid", $i, $j};
		my $typeid = $ARGS{sprintf "tr%d_rel%d_typeid", $i, $j};
		my $begindate = $ARGS{sprintf "tr%d_rel%d_begindate", $i, $j};
		my $enddate = $ARGS{sprintf "tr%d_rel%d_enddate", $i, $j};
		MusicBrainz::TrimInPlace($nodeid, $typeid, $begindate, $enddate, $mp);

		# linked entity
		my $type = $ARGS{sprintf "tr%d_rel%d_e_type", $i, $j};
		my $id = $ARGS{sprintf "tr%d_rel%d_e_id", $i, $j};
		my $name = $ARGS{sprintf "tr%d_rel%d_e_name", $i, $j};
		MusicBrainz::TrimInPlace($type, $id, $name);

		# retrieve array of attributes
		my @relattrs = sort map { /^tr${i}_rel${j}_attr(\d+)$/ ? ($1) : () } keys %ARGS;
		my @attrlist;
		for my $k (@relattrs)
		{
			my $attr = $ARGS{sprintf "tr%d_rel%d_attr%d", $i, $j, $k};
			push @attrlist, $attr;
		}
	}
	return %ARGS;

</%init>

%# vi: set ts=4 sw=4 ft=mason :
<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Change the ReleaseArtist of this release
	#
	# $Id$
	#
</%perl>
<%args>

	# the musicbrainz object
	$mb
	$artistedit

</%args>
<%perl>

	# define which fields we're attempting to set.
	my $field_artistid = "artistid";
	my $field_artistname = "artistname";
	my $curr_artistid = $ARGS{$field_artistid};
	my $curr_artistname = $ARGS{$field_artistname};
	my $artistfilter_search = $ARGS{"artistfilter_search"};

	my ($artist, @artists);
	$artist = Artist->new($mb->{DBH});
	@artists = @{ $artist->GetArtistsFromName($curr_artistname) };

	# if a single item was found, set it and redirect back to the form.
	if (@artists == 1 and
		$artists[0]->GetName eq $curr_artistname)
	{
		$ARGS{"artistid"} = $artists[0]->GetId;
		$ARGS{"artistname"} = $artists[0]->GetName;
		$ARGS{"artistresolution"} = $artists[0]->GetResolution;

		$ARGS{"v::showform"} = 1;
		delete $ARGS{"force_macsac"};
		delete $ARGS{"artistedit"};
	}
	else
	{

		# Use the Search Engine to get a list of matching artists
		# search for the value of the search field, else
		# for the existing name.
		my $engine = SearchEngine->new($mb->{DBH}, "artist");
		$engine->Search(
			query => $artistfilter_search || $curr_artistname,
			limit => 0,
		);


</%perl>

		<form method="post" action="<% $ARGS{"v::action"} %>" >

			<& /comp/tablebegin, title => "Select Release Artist" &>

				<table class="formstyle">

					<& /comp/artistfilter,

						# hand-in the SearchEngine to the artistfilter.
						# This will prevent it from carrying out an own search.
						engine => $engine,
						search => $artistfilter_search || $curr_artistname,
						searchfieldname => "artistfilter_search",

						# which field we're currently selecting.
						# if the new artist is set, we'll set the
						# field corresponding to artistfilter_field with
						# the new value.
						artistfilter_selectedfield => "artistfilter_newartistid",
						artistfilter_field => $field_artistid, # release:artistid / track: tr0_artistid

						# button values which drive the form handling
						# in the page using this component.
						selectbutton => $ARGS{"SUBMIT_RELEASEARTIST_SELECT"},
						searchbutton => $ARGS{"SUBMIT_RELEASEARTIST_SEARCH"},
						searchagainbutton => $ARGS{"SUBMIT_RELEASEARTIST_SEARCH"},

						cancelbutton => $ARGS{"SUBMIT_BACKTOFORM"},
						addartistbutton => $ARGS{"SUBMIT_ADDARTIST"},

						submitvalue => $ARGS{"submitvalue"},
					&>

				</table>


			<& /comp/tableend &>

%	my %args = $m->comp("/comp/form/args-strip-editsuitefields", %ARGS);
%	delete $args{"submitvalue"};

%	$m->comp("/comp/args-to-hidden-fields.inc", %args);

			<& /comp/form/hiddenfield, "submitvalue", $ARGS{"SUBMIT_RELEASEARTIST_SELECT"} &>

		</form>

<%perl>

		# we're selecting an artist, don't show main form.
		$ARGS{"v::validate"} = 0;
		$ARGS{"v::showform"} = 0;
	}

	return %ARGS;

</%perl>

%# vi: set ts=4 sw=4 ft=mason :

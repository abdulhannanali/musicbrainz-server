<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Convert the release to a MultipleArtistsRelease
	#
	# $Id$
	#
</%perl>
<%args>

	$artistid => 0
	$tracks

</%args>
<%init>

	# Scan through the track names and artists, and work out what the likely
	# "split" sequence is, and what the most common track artist is.
	my %split = map { $_ => 0 } (" - ", "-", " / ", "/", ": ", ":");
	for my $i (0 .. $tracks-1)
	{
		for my $split (keys %split)
		{
			++$split{$split} if index($ARGS{"track$i"}, $split) >= 0;
		}
	}
	my $mostcommonkey = sub {
		my $t = shift;
		my @k = sort { $t->{$a} <=> $t->{$b} } keys %$t;
		$k[-1];
	};
	my $split = $mostcommonkey->(\%split);

	for my $i (0 .. $tracks-1)
	{
		my $trackname = $ARGS{"track$i"};

		# Do a split on the track name
		my ($splitartistname, $splittrackname) = split($split, $trackname, 2);
		($splittrackname, $splitartistname) = split(/\s+[\/-]\s+/, $trackname, 2)
			unless defined $splittrackname;

		$ARGS{"tomac-failed"} = 1
			unless defined $splitartistname;

		# Trim everything
		for ($splittrackname, $splitartistname)
		{
			s/\A\s+//;
			s/\s+\z//;
			s/\s\s+/ /g; #/#
		}

		$ARGS{"track$i"} = $splittrackname;
		$ARGS{sprintf "tr%d_artistname", $i} = $splitartistname;
	}

	# force form to display track artist
	$ARGS{"hasmultipletrackartists"} = 1;
	$ARGS{"artistid"} = &ModDefs::VARTIST_ID
		if ($ARGS{"mac_usevartist"});

	# re-trigger mac/sac check if the user enters weird
	# artists/track combinations
	delete $ARGS{"force_macsac"};
	return %ARGS;

</%init>

%# vi: set ts=4 sw=4 ft=mason :

%# vi: set ts=4 sw=4 ft=mason :
<%once>
use vars qw( @main %urlmap %urlmap2 );

use Scalar::Util qw( reftype weaken );

@main = (
	{ name => "Home",					url => "/index.html" },
	{ name => "About",					url => "/introduction.html" },
	[
		{ name => "Introduction",			url => "/introduction.html" },
		{ name => "History",				url => "/history.html" },
		{ name => "People",					url => "/bio.html" },
		[
			{ name => "Moderators",				url => "/moderator.html" },
			{ name => "Top Mods",				url => "/topmods.html" },
		],
		{ name => "The Future",				url => "/future.html" },
		{ name => "Finance",				url => "/sponsors.html" },
		[
			{ name => "Sponsors",				url => "/sponsors.html" },
			{ name => "Finances",				url => "/finances.html" },
			{ name => "Contribute",				url => "/contribute.html"},
		],
		{ name => "Licenses",               url => "/news/licenses.html" },
		{ name => "Contract",				url => "/contract.html" },

		{ url => "/freeamp/index.html" },
	],
	{ name => "News",					url => "/news/index.html" },
	[
		{ name => "Latest News",			url => "/news/index.html" },
		{ name => "In The Press",			url => "/press.html" },
		{ name => "White Papers",			url => "/papers/index.html" },
		[
			{ name => "Non-Profit",				url => "/papers/mb_nonprofit.html" },
			{ name => "Licensing",				url => "/papers/mb_license.html" },
		],
        { url => "/news/pressreleases/20030211-1.html" },
        { url => "/news/20030302-1.html" },
        { url => "/news/20030329-1.html" },
	],
	{ name => "Products",				url => "/download.html" },
	[
		{ name => "Download",				url => "/download.html" },
		{ name => "Tagger",					url => "/tagger/index.html" },
		[
			{ name => "Introduction",			url => "/tagger/index.html", preferred => 1 },
			{ name => "Download",				url => "/tagger/download.html" },
			{ name => "Tutorial",				url => "/tagger/tutorial.html" },
			{ name => "FAQ",					url => "/tagger/faq.html" },
			{ name => "Donate",					url => "/tagger/donate.html" },

			{ url => "/taglookup.html" },
			{ url => "/tagger/login.html" },
			{ url => "/tagger/noitems.html" },
		],
		{ name => "CD Lookup",				url => "/products/cdlookup/download.html" },
		{ name => "TRM Generator",			url => "/products/trmgen/download.html" },
		{ name => "Client / SDK",			url => "/products/client/index.html" },
		[
			{ name => "Intro",					url => "/products/client/index.html" },
			{ name => "Download",				url => "/products/client/download.html" },
			{ name => "HOWTO",					url => "/client_howto.html" },
		],
		{ name => "Server / Data",			url => "/products/server/index.html" },
		[
			{ name => "Intro",					url => "/products/server/index.html" },
			{ name => "Download",				url => "/products/server/download.html" },
			#{ name => "FAQ",					url => "/products/server/faq.html" },
			{ name => "DB Structure",			url => "/db_structure.html" },
			{ name => "Import HOWTO",			url => "/products/server/import_howto.html" },
			#{ name => "Setup HOWTO",			url => "/products/server/setup_howto.html" },
		],
	],
	{ name => "Search/Browse",			url => "/search.html" },
	[
		{ name => "Search",					url => "/search.html" },
		#{ name => "Artist",					url => "/search.html#artist" },
		#{ name => "Album",					url => "/search.html#album" },
		#{ name => "Track",					url => "/search.html#track" },
		{ name => "Browse Artists",			url => "/browseartists.html" },
		{ name => "Browse Albums",			url => "/browsevarious.html" },
		#{ name => "Site Search",			url => "/search.html#google" },
		#{ name => "Advanced",				url => "/search.html#advanced" },
		#[
			#{ name => "Lookup by ID",			url => "/search.html#id" },
			{ name => "Search Links",			url => "/engine.html" },
			#{ name => "TRM",					url => "/search.html#trm" },
		#],
		{ url => "/newsearch.html" },
	],
    { name => "Edit the Data",			url => "/mod_intro.html" },
    [
        { name => "About",					url => "/mod_intro.html" },
        { name => "Suggestions",			url => "/moderation/suggestions.html" },
        [
            { name => "Odd Characters",			url => "/reports/bad_entries.html" },
            { name => "Uppercase",				url => "/reports/caps.html" },
            { name => "Lowercase",				url => "/reports/caps2.html" },
            { name => "'Unknown'",				url => "/reports/unknown.html" },
            { name => "Wrong Charset",			url => "/reports/wrong_charset.html" },
            { name => "Duplicate Artists",		url => "/reports/DuplicateArtists.html" },
            { name => "MAC Albums",				url => "/reports/AlbumsToConvert.html" },
            { name => "TRM Collisions",			url => "/reports/TRMsWithManyTracks.html" },
            { name => "Multiple TRMs",			url => "/reports/TracksWithManyTRMs.html" },
            { name => "Track Numbers",			url => "/reports/TracksNamedWithSequence.html" },
        ],
        { name => "FAQ",					url => "/mod_faq.html" },
        { name => "Style",					url => "/style.html" },
        { name => "Moderations",			url => "/moderate.html" },
        [
            { name => "New",					url => "/moderate.html?type=1" },
            { name => "New (FreeDB)",			url => "/moderate.html?type=5" },
            { name => "My Mods",				url => "/moderate.html?type=3" },
            { name => "My Votes",				url => "/moderate.html?type=2" },
            { name => "Failed Mods",			url => "/moderate.html?type=7" },
            { name => "Jump to ID",				url => "/jumpmod.html" },
			[
				{ url => "/showmod.html" },
			],
        ],

		# XXX Should this be here?  Currently this means that even logged-in
		# users get a "log in" link.
        { name => "Log In",					url => "/login.html" },
        [
            { name => "Existing User",			url => "/login.html" },
            [
                { name => "Preferences",			url => "/prefs.html" },
            ],
            { name => "New User",				url => "/newlogin.html" },
            [
                { url => "/createlogin.html" },
            ],
            { url => "/logout.html" },
        ],

        { name => "Add Artist",				url => "/addartist.html" },
        { name => "Add Album",				url => "/addalbum.html?artistid=0" },
		[
			{ url => "/addalbum.html" },
			{ url => "/cdi/album.html" },
			{ url => "/cdi/artist.html" },
			{ url => "/cdi/done.html" },
			{ url => "/cdi/enter.html" },
			{ url => "/cdi/found.html" },
			{ url => "/cdi/selectattr.html" },
			{ url => "/cdi/submit.html" },
		],
        { name => "Add Album (VA)",			url => "/addalbum.html?artistid=1" },
		[
			{ url => "/cdi/malbum.html" },
			{ url => "/cdi/menter.html" },
		],
        { name => "FreeDB Import",			url => "/freedb/freedb.html" },
		[
			{ url => "/freedb/import.html" },
		],

        { url => "/addalias.html" },
        { url => "/addnonalbumtracks.html" },
        { url => "/addtrack.html" },

        { url => "/changetrack.html" },
        { url => "/changetrackartist.html" },

        { url => "/editalbumattrs.html" },
        { url => "/editalbum.html" },
        { url => "/editartist.html" },
        { url => "/edittrack.html" },

        { url => "/mergeartist.html" },
        { url => "/movealbum.html" },
        { url => "/movediscid.html" },

        { url => "/remalbum.html" },
        { url => "/remartistalias.html" },
        { url => "/remartist.html" },
        { url => "/remdiscid.html" },
        { url => "/removemod.html" },
        { url => "/remtrack.html" },
        { url => "/remtrm.html" },

        { url => "/albumdetail.html" },
        { url => "/showalbum.html" },
        { url => "/showartist.html" },
        { url => "/showtrack.html" },
        { url => "/showtrm.html" },

        { url => "/tomac.html" },
        { url => "/tosac.html" },

        { url => "/mod/tag/canceltag.html" },
        { url => "/mod/tag/donetag.html" },
        { url => "/mod/tag/merge.html" },
        { url => "/mod/tag/remove.html" },
    ],
	{ name => "Help Us",				url => "/contribute.html" },
	[
		{ name => "Contribute",				url => "/contribute.html", preferred=>1 },
        { name => "Tag",					url => "/tagger/index.html" },
        [
            { url => "/tagger/intro.html" },
        ],
		{ name => "Development",			url => "/development/index.html" },
		[
			{ name => "Introduction",			url => "/development/index.html" },
			{ name => "Project Status",			url => "/status.html" },
			{ name => "CVS Access",		        url => "/development/cvs.html" },
			{ name => "TODO",					url => "/todo.html" },
			[
				{ name => "TODO",					url => "/todo.html" },
				{ name => "Rob's TODO",				url => "/development/TODO.rob.html" },
				{ name => "Johan's TODO",			url => "/johan_todo.html" },
				{ name => "Dave's TODO",			url => "/development/TODO.dave.html" },
			],
			{ name => "Metadata 2.1",			url => "/MM/index.html" },
			[
				{ name => "Introduction",			url => "/MM/index.html" },
				{ name => "mm",						url => "/MM/mm_examples.html" },
				{ name => "mq",						url => "/MM/mq_examples.html" },
			],
		],
	],
	{ name => "Support",				url => "/information.html" },
	[
		{ name => "FAQ",					url => "/faq.html" },
		{ name => "Docs",					url => "/documentation.html" },
		[
			{ name => "Introduction",			url => "/documentation.html" },
			{ name => "How",					url => "/how.html" },
			{ name => "Client HOWTO",			url => "/client_howto.html" },
			{ name => "Client Docs",			url => "/docs/mb_client/" },
			{ name => "CD Submission",			url => "/cd_submission.html" },
			{ name => "About MB IDs",			url => "/tagger/id-intro.html" },
			{ name => "About Disc IDs",			url => "/disc.html" },
			{ name => "ID3 Tags",		url => "/docs/specs/metadata_tags.html" },
			{ name => "Database",				url => "/db_structure.html" },
			{ name => "Stats",					url => "/stats.html" },
		],
		{ name => "Contact Us",				url => "/support/contact.html" },
		{ name => "Mailing Lists",			url => "/list.html" },
		{ name => "Report a Bug",			url => "http://sourceforge.net/tracker/?func=add&amp;group_id=19506&amp;atid=119506" },
	],
	{ name => "Wiki",					url => "http://wiki.musicbrainz.org/" },
);

%urlmap = ();
%urlmap2 = ();
transform(\@main, \(my $tmp = 0));

sub transform
{
	my ($rarhMenu, $riNextIndex, $rhParentItem) = @_;

	for (my $i = 0; $i < @$rarhMenu; ++$i)
	{
		my $rhItem = $rarhMenu->[$i];

		$rhItem->{expand} = 0;
		$rhItem->{id} = "sitemenu" . (++$$riNextIndex);
		weaken($rhItem->{parent} = $rhParentItem);

		my $u = $rhItem->{url};
		$urlmap{$u} = $rhItem
			unless $urlmap{$u} and $urlmap{$u}{preferred};
		push @{ $urlmap2{$u} }, $rhItem;

		my $raNext = $rarhMenu->[$i+1];
		if ($raNext and reftype($raNext) eq "ARRAY")
		{
			$rhItem->{children} = $raNext;
			splice(@$rarhMenu, $i+1, 1);
			transform($rhItem->{children}, $riNextIndex, $rhItem);
		}
	}
}

</%once>
<%perl>

my $uri = shift() || $r->uri;
my $args = shift() || $r->args;

use vars qw( $render_all );
$render_all = not $session{'sitemenu_light'};

sub drawmenu
{
	my ($rarhMenu, $iLevel) = @_;

	$m->out("<div class='sitemenu$iLevel'>\n");

	for my $rhItem (@$rarhMenu)
	{
		$rhItem->{name} or next;

		my $rarhChildren = $rhItem->{children};
		my $fSel = $rhItem->{expand};

		my $state = $fSel ? "_o" : "_c";
		my $id = $rhItem->{id};

		$m->out("<div class='menuitem' id='${id}item'>\n");
		$m->out("<div class='menurow$state' id='${id}row'>\n");

		$rarhChildren = undef
			if $rarhChildren
			and not grep { $_->{name} } @$rarhChildren;

		if ($rarhChildren and ($render_all or $fSel))
		{
			$m->out("<a class='menucontrol$state'
				id='${id}control'
				href='$rhItem->{url}'
				onclick='return smt(\"$rhItem->{id}\")'
				>&nbsp;</a>");
		} elsif ($rarhChildren) {
			$m->out("<span class='menucontrol$state'
				id='${id}control'
				>&nbsp;</span>");
		} else {
			$m->out("<a class='menunocontrol$state'
				id='${id}control'
				>&nbsp;</a>");
		}
		
		$m->out("<a class='menulink' href='$rhItem->{url}'>$rhItem->{name}</a>");
		$m->out("</div>"); # menurow

		if ($rarhChildren and ($render_all or $fSel))
		{
			$m->out("<div class='submenu$state' id='${id}sub'>\n");
			drawmenu($rarhChildren, $iLevel+1);
			$m->out("</div>\n");
		}

		$m->out("</div>\n"); # menuitem
	}

	$m->out("</div>\n"); # level
}

sub identify_selected
{
	my ($uri, $args) = @_;
	my @sel;

	my $rhSelItem = $urlmap{$uri . "?" . $args};
	$rhSelItem ||= $urlmap{$uri};

	while ($rhSelItem)
	{
		$rhSelItem->{expand} = 1;
		unshift @sel, $rhSelItem;
		$rhSelItem = $rhSelItem->{parent};
	}

	\@sel;
}

sub disable_selected
{
	my $rarhSel = shift;
	
	for (@$rarhSel)
	{
		$_->{expand} = 0;
	}
}

</%perl>

<table cellpadding="3" cellspacing="0" border="0" width="131px">
  <tr>
    <td>
		<script type="text/javascript" src="/scripts/sitemenu.js"></script>
		<%perl>
		my $t = identify_selected($uri ,$args);
		drawmenu(\@main, 0);
		disable_selected($t);
		</%perl>
    </td>
  </tr>
</table>

<%perl>

return;

my $links = $urlmap2{$uri . "?" . $args};
$links ||= $urlmap2{$uri};

if ($links and @$links > 1)
{
	$m->comp("sidebarsection", title => 'Related Links');
	$m->comp("sidebarareabegin");
	</%perl>
	<p>This page appears in these sections:</p>
	<ul class="RelatedLinksList">
% for (@$links) {
		<li><a href="<% $_->{parent}{url} %>"><% $_->{parent}{name} %></a></li>
% }
	</ul>
	<%perl>
	$m->comp("sidebarareaend");
}

</%perl>

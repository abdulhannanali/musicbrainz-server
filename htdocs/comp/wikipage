<%args>

	$id => undef

</%args>
<%perl>

	MusicBrainz::IsSingleLineString($id) and $id =~ /\A\w+\z/
		or return $m->comp("/comp/badargs", 1, 1);

	use LWP::Simple;
	my $page = get( 'http://' . &DBDefs::WIKIDOC_SERVER . '/read/' . $id . '?action=content');

	if (defined $page)
	{

		# Some pages in the Wiki use URLs of the form: http:/page.html .
		# This works in some browsers (it's taken as relative to
		# http://www.musicbrainz.org/ ..., so resolves to
		# http://www.musicbrainz.org/page.html).  However I can't tell
		# for certain whether or not the RFCs define this to be correct.
		# So for now, rewrite those URLs to their canonical form.
		$page =~ s[href="http:/(\w)]['href="http://' . &DBDefs::WEB_SERVER . "/$1"]eg;

		# Hack.  I've broken ruaok's wiki patches, so this works around them for now.
		$page =~ s[<a class="nonexistent" href="/read/\w+">(.*?)</a>][$1]sg;
		$page =~ s[<a href="/read/(\w+)">][<a href="/wd/$1">]g;

		# Obfuscate e-mail addresses
		$page =~ s/(\w+)\@(\w+)/$1&#x0040;$2/g;
		$page =~ s/mailto:/mailto&#x3a;/g;

			$m->print($page);
	}
	else
	{
		$m->comp('/comp/error',
				"Could not connect to documentation server.", 0, 0);
	}

</%perl>

%# vi: set ts=4 sw=4 ft=mason :
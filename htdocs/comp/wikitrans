<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# This component transcludes page for the WikiDocs feature.
	#
	# $Id$
	#
</%perl>
<%args>

	$id => undef

</%args>
<%perl>

	# added forward slash "/", since we'd like to be able to transclude
	# subpages, too. --Keschte
	MusicBrainz::IsSingleLineString($id) and $id =~ /\A[\w\/]+\z/
		or return $m->comp("/comp/badargs", 1, 1);

	# Instantiate MusicBrainz object, and load the
	# transclusion index.
	my $mb = $m->comp("/comp/dblogin");
	my $wt = MusicBrainz::Server::WikiTransclusion->new($mb->{DBH});
	my $index = $wt->GetPageIndex();
	if (!defined $index)
	{
		$m->out(qq!<p><b>Error:</b> The documentation index is currently
				not available. Please try again in a moment.</p>!);
		return;
	}

	# get names of the servers from DBDefs
	my $server = &DBDefs::WEB_SERVER;
	my $wdserver = &DBDefs::WIKITRANS_SERVER;

	my $isWikiDocs = exists($index->{$id}) ? 1 : 0;
	my $cacheKey = "wikidocs-$id";
	my $page = MusicBrainz::Server::Cache->get($cacheKey);


	# If we have the page in the cache, continue with flag contentOk=1.
	my $contentOk = 0;
	if ($page)
	{
		$contentOk = 1;
	}
	else
	{
		# Nope, get it from the wiki, process and cache it
		my $docurl = "http://" . &DBDefs::WIKITRANS_SERVER . "/"
					. $id . "?action="
					. ($isWikiDocs ? ("ContentRev&rev=".$index->{$id}) : "content");

		require LWP::UserAgent;
		my $ua = LWP::UserAgent->new(max_redirect => 0);
		my $response = $ua->get($docurl);

		# The wiki search provides a fuzzy search, so we provide a search string,
		# which enables users to search for the page title if there is no exact match.
		my $searchlink = encode_entities("http://wiki.musicbrainz.org/?action=fullsearch&context=180&value=$id&titlesearch=Titles");
		if (!$response->is_success)
		{
		        if ($response->is_redirect)
				{
					if ($response->header("Location") =~ /http:\/\/(.*?)\/(.*)$/)
					{
						return $m->comp("/comp/wikitrans", id=>$2);
					}
				}
</%perl>

	            <div class="wikidocs">
				<div class="header">
					Could not retrieve wiki page from wiki server. (Status: <% $response->status_line %>)
				</div>
				<div class="unofficial">
					It is possible the page <strong><% $id %></strong> you are looking for does
					not exist <em>yet</em>, but you might find a page which has a similar title
					using the wiki search on the <a href="<% $searchlink |n %>">MusicBrainz Wiki</a>.
					If this does not help either, and you know how to edit wiki pages, please
					help us completing our documentation.
				</div>
	            </div>

%		}
%		else
%		{
%			$page = $response->content;
%			if ($page =~ /<a id="top"><\/a>\s+<a id="bottom"><\/a>/s)
%			{

	            <div class="wikidocs">
				<div class="header">
					The wiki page <% $id %> does not exist. (Status: 404)
				</div>
				<div class="unofficial">
					It is possible the page <strong><% $id %></strong> you are looking for does
					not exist <em>yet</em>, but you might find a page which has a similar title
					using the wiki search on the <a href="<% $searchlink |n %>">MusicBrainz Wiki</a>.
					If this does not help either, and you know how to edit wiki pages, please
					help us completing our documentation.
				</div>
	            </div>

<%perl>

			}
			else
			{
				# Some pages in the Wiki use URLs of the form: http:/page.html .
				# This works in some browsers (it's taken as relative to
				# http://www.musicbrainz.org/ ..., so resolves to
				# http://www.musicbrainz.org/page.html).  However I can't tell
				# for certain whether or not the RFCs define this to be correct.
				# So for now, rewrite those URLs to their canonical form.
				$page =~ s[href="http:/(\w)]['href="http://' . $server . "/$1"]eg; # <-- this hack makes vim happy

				# remove intertwingled links to non-existent pages.
				$page =~ s/<a class="nonexistent" [^>]+>([^<]+)<\/a>/$1/g;

				my $temp = "";
				while(1)
				{
					if ($page =~ s/(.*?)<a(.*?)href="\/(.*?)"(.*?)>(.*?)<\/a>//s)
					{
						my ($pre, $href, $rep, $post, $linktext) = ($1, $2, $3, $4, $5);

						# removed this. we can use pretty linking if we want to show
						# the camelcased words with spaces. --keschte
						# $linktext =~ s/([a-z])([A-Z])/$1 $2/g;

						# distinguish between wikidocs and normal wiki pages.
						my $isWD = exists($index->{$rep});
						my $css = $isWD ? "official" : "unofficial";
						my $title = $isWD ? "Wiki docs link" : "Wiki link";

						$temp .= qq!$pre<a$href class="$css" title="$title" href="http://$server/doc/$rep"$post>$linktext</a>!;
					}
					else
					{
						 $temp .= $page;
						 last;
					}
				}
				$page = $temp;

				# this fixes image links to point to the wiki
				$page =~ s[src="/-/]['src="http://' . $wdserver . "/-/$1"]eg; #' <-- this hack makes vim happy

				# assume img src URLs which contain "AttachFile&amp;do=get" are attachments to the
				# wiki page being transcluded. TODO: Does this strain the wiki server too much?
				$page =~ s[<img src="([^"]*action=AttachFile&amp;do=get[^"]*)"][<img src="http://wiki.musicbrainz.org$1"]g;

				# remove external links icons from links that point to mb.org
				$page =~ s[(<a href="http:\/\/(www\.)?musicbrainz.org.*?">)<img src="http:\/\/wiki.musicbrainz.org\/-\/musicbrainz\/img\/moin-www\.png".*?>][$1]g;

				# move headers one level up
				$page =~ s/<(\/?)h2/<$1h1/ig;
				$page =~ s/<(\/?)h3/<$1h2/ig;
				$page =~ s/<(\/?)h4/<$1h3/ig;
				$page =~ s/<(\/?)h5/<$1h4/ig;

				$page =~ s/&lt;code&gt;/<code>/ig;
				$page =~ s/&lt;\/code&gt;/<\/code>/ig;


				# Obfuscate e-mail addresses
				$page =~ s/(\w+)\@(\w+)/$1&#x0040;$2/g;
				$page =~ s/mailto:/mailto&#x3a;/g;

				# expand placeholders which point to the current webserver [@WEB_SERVER@/someurl title]
				$page =~ s/\[\@WEB_SERVER\@([^ ]*) ([^\]]*)\]/<img src="\/images\/edit.gif" alt="" \/><a href="$1">$2<\/a>/g;

				# Now store page in cache
				MusicBrainz::Server::Cache->set($cacheKey, $page, &MusicBrainz::Server::WikiTransclusion::CACHE_INTERVAL);
				$contentOk = 1;
			}
		}
	}

	if ($contentOk)
	{
		# wrap the content of the wiki (official|unofficial) into the
		# corresponding css classes.
		if ($isWikiDocs)
		{

</%perl>
	            <div class="wikidocs">
				<div class="official"><% $page |n %></div>
				<div class="footer">
					This <a href="/doc/WikiDocsPage">WikiDocsPage</a>
					is based on the revision <a href="http://wiki.musicbrainz.org/<% $id %>?action=info">#<% $index->{$id} %></a>
					of the WikiPage <a href="http://wiki.musicbrainz.org/<% $id %>"><% $id %></a>
				</div>
	            </div>

%		}
%		else
%		{
	            <div class="wikidocs">
				<div class="header">
					This page has been copied from our Wiki.
					The content is <em><strong>not official</strong></em>
					but probably correct and hopefully informative.
					If you have spotted a spelling error, or want to help
					writing the documentation, you'll find the editable version
					of this page on the wiki at <img src="/images/edit.gif" alt="" /><a
					href="http://wiki.musicbrainz.org/<% $id %>"><% $id %></a>
				</div>
				<div class="unofficial"><% $page |n %></div>
	            </div>

%		}
%	}

%# vi: set ts=4 sw=4 ft=mason :

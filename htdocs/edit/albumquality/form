<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# This comment displays the edit release quality form.
	# Used in edit/albumquality/edit.html, and cdi/selectattr.html
	#
	# $Id: form 8548 2006-10-19 07:41:02Z dave $
	#
</%perl>
<%args>
	$quality_curr
	$notetext => ""
	$quality_fieldname => "quality_new"
</%args>
<%perl>

	# Instantiate MusicBrainz object
	my $mb = $m->comp("/comp/dblogin");
    $quality_curr = &ModDefs::QUALITY_UNKNOWN_MAPPED if $quality_curr == &ModDefs::QUALITY_UNKNOWN;

</%perl>

		<tr class="spaced">

			<td class="label">
				<label for="id_<% $quality_fieldname %>">Quality:</label></td>
			<td class="field">
%               if ($quality_curr != &ModDefs::QUALITY_LOW) {
                    <input type="radio" name="<% $quality_fieldname %>" value="<% &ModDefs::QUALITY_LOW %>">
                    <b><% ModDefs::GetQualityText(&ModDefs::QUALITY_LOW) %></b> -- 
                    this quality level generally requires fewer votes and a shorter voting period and 
                    should be used for artists that require a lot of cleanup.
                    This level makes it easy to change information for this artist.<br/>
%				}
%               if ($quality_curr != &ModDefs::QUALITY_NORMAL) {
				    <input type="radio" name="<% $quality_fieldname %>" value="<% &ModDefs::QUALITY_NORMAL %>">
                    <b><% ModDefs::GetQualityText(&ModDefs::QUALITY_NORMAL) %></b> -- 
                    this quality level requires a normal amount of votes and a normal voting period 
                    and should be used for most artists.<br/>
%				}
%               if ($quality_curr != &ModDefs::QUALITY_HIGH) {
                    <input type="radio" name="<% $quality_fieldname %>" value="<% &ModDefs::QUALITY_HIGH %>">
                    <b><% ModDefs::GetQualityText(&ModDefs::QUALITY_HIGH) %></b> -- 
                    this quality level generally requires more votes and a longer voting period 
                    and should be used with artists whose information is fairly complete. 
                    This level makes it hard to change information for this artist.<br/>
%				}
           </td>
		</tr>

		<tr>
			<td>&nbsp;</td>
			<td class="notetext">
				<& /comp/notetext,
					notetext => $notetext, &></td>
		</tr>

%# vi: set ts=4 sw=4 ft=mason :

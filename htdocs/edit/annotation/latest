<%perl>
	# -----------------------------------------------------------------------------
	#                               Musicbrainz.org
	#                        Copyright (c) 2001 Robert Kaye
	# -----------------------------------------------------------------------------
	#  This software is provided "as is", without warranty of any kind, express or
	#  implied, including  but not limited  to the warranties of  merchantability,
	#  fitness for a particular purpose and noninfringement. In no event shall the
	#  authors or  copyright  holders be  liable for any claim,  damages or  other
	#  liability, whether  in an  action of  contract, tort  or otherwise, arising
	#  from,  out of  or in  connection with  the software or  the  use  or  other
	#  dealings in the software.
	#
	#  GPL - The GNU General Public License    http://www.gnu.org/licenses/gpl.txt
	#  Permits anyone the right to use and modify the software without limitations
	#  as long as proper  credits are given  and the original  and modified source
	#  code are included. Requires  that the final product, software derivate from
	#  the original  source or any  software  utilizing a GPL  component, such  as
	#  this, is also licensed under the GPL license.
	# -----------------------------------------------------------------------------
	#
	# Summary:
	# -----------------------------------------------------------------------------
	# Renders the latest revision of the annotation, or displays links for
	# creating one if it has not been created yet, and the user is logged in.
	#
	# $Id$
	#
</%perl>
<%args>

	$album => undef
	$artist => undef
	$explain => undef
	$header =>  undef
	$show_info => 1
	$history_link => 1

</%args>
<%perl>

	# Instantiate MusicBrainz object.
	my $mb = $m->comp("/comp/dblogin");

	# load the annotation from the database
	my $annotation = MusicBrainz::Server::Annotation->new($mb->{DBH});
	if (defined $artist)
	{
		$annotation->SetArtist($artist->GetId);
		$annotation->GetLatestAnnotation() or $annotation = undef;
	}
	elsif (defined $album)
	{
		$annotation->SetAlbum($album->GetId);
		$annotation->GetLatestAnnotation() or $annotation = undef;
	}
	else
	{
		return;
	}

	if ($annotation)
	{
  		$m->comp("/edit/annotation/show",
  			annotation => $annotation, history_link => $history_link,
			short => 1, explain => $explain,
			header => $header, show_info => $show_info);
	}
	elsif ($show_info)
	{
		if ($session{uid})
		{
			$m->out("<p>");
			if (defined $artist)
			{
				$m->out("This artist does not yet have an annotation. ");
				$m->out(sprintf qq!<a href="/edit/annotation/artist/edit.html?artistid=%d">Add an annotation &raquo;</a>!,
								$artist->GetId());
			}
			elsif (defined $album)
			{
				$m->out("This release does not yet have an annotation. ");
				$m->out(sprintf qq!<a href="/edit/annotation/album/edit.html?albumid=%d">Add an annotation &raquo;</a>!,
								$album->GetId());
			}
			$m->out("</p>");
		}
	}

</%perl>

%# vi: set ts=4 sw=4 ft=mason :